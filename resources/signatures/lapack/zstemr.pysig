# double precision complex symmetric tridiagonl eigensolver using MRRR
Signature(
    "zstemr",
    Flag("jobz", ("V", "N")),
    Flag("range", ("A", "V", "I")),
    Dim("n"),
    dData("D", "n"),
    dData("E", "n - 1"),
    dScalar("vl"),
    dScalar("vu"),
    iScalar("il"),
    iScalar("iu"),
    iScalar("m"),
    dData("W", "n"),
    zData("Z", "ldZ * n"),  # actually: ldZ * m
    Ld("ldZ", "n if jobz == 'V' else 1"),
    Dim("nZc", "n if range == 'A' else n if range == 'V' else iu + il + 1"),
    iData("isuppZ", "2 * n"),  # actually: 2 * m
    Flag("tryrac", ("0", "1")), #TODO: allow 0 and 1
    dWork("Work", "lWork"),
    Lwork("lWork", "18 * n if jobz == 'V' else 12 * n"),
    iWork("iWork", "liWork"),
    Lwork("liWork", "10 * n if jobz == 'V' else 8 * n"),
    Info()
)
