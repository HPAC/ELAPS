(('clasyf', "CLASYF computes a partial factorization of a complex symmetric matrix\nA using the Bunch-Kaufman diagonal pivoting method. The partial\nfactorization has the form:\n\nA  =  ( I  U12 ) ( A11  0  ) (  I       0    )  if UPLO = 'U', or:\n      ( 0  U22 ) (  0   D  ) ( U12**T U22**T )\n\nA  =  ( L11  0 ) ( D    0  ) ( L11**T L21**T )  if UPLO = 'L'\n      ( L21  I ) ( 0   A22 ) (  0       I    )\n\nwhere the order of D is at most NB. The actual order is returned in\nthe argument KB, and is either NB or NB-1, or N if N <= NB.\nNote that U**T denotes the transpose of U.\n\nCLASYF is an auxiliary routine called by CSYTRF. It uses blocked code\n(calling Level 3 BLAS) to update the submatrix A11 (if UPLO = 'U') or\nA22 (if UPLO = 'L')."), ('UPLO', "UPLO is CHARACTER*1\nSpecifies whether the upper or lower triangular part of the\nsymmetric matrix A is stored:\n= 'U':  Upper triangular\n= 'L':  Lower triangular"), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('NB', 'NB is INTEGER\nThe maximum number of columns of the matrix A that should be\nfactored.  NB should be at least 2 to allow for 2-by-2 pivot\nblocks.'), ('KB', 'KB is INTEGER\nThe number of columns of A that were actually factored.\nKB is either NB-1 or NB, or N if N <= NB.'), ('A', "A is COMPLEX array, dimension (LDA,N)\nOn entry, the symmetric matrix A.  If UPLO = 'U', the leading\nn-by-n upper triangular part of A contains the upper\ntriangular part of the matrix A, and the strictly lower\ntriangular part of A is not referenced.  If UPLO = 'L', the\nleading n-by-n lower triangular part of A contains the lower\ntriangular part of the matrix A, and the strictly upper\ntriangular part of A is not referenced.\nOn exit, A contains details of the partial factorization."), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('IPIV', "IPIV is INTEGER array, dimension (N)\nDetails of the interchanges and the block structure of D.\n\nIf UPLO = 'U':\n   Only the last KB elements of IPIV are set.\n\n   If IPIV(k) > 0, then rows and columns k and IPIV(k) were\n   interchanged and D(k,k) is a 1-by-1 diagonal block.\n\n   If IPIV(k) = IPIV(k-1) < 0, then rows and columns\n   k-1 and -IPIV(k) were interchanged and D(k-1:k,k-1:k)\n   is a 2-by-2 diagonal block.\n\nIf UPLO = 'L':\n   Only the first KB elements of IPIV are set.\n\n   If IPIV(k) > 0, then rows and columns k and IPIV(k) were\n   interchanged and D(k,k) is a 1-by-1 diagonal block.\n\n   If IPIV(k) = IPIV(k+1) < 0, then rows and columns\n   k+1 and -IPIV(k) were interchanged and D(k:k+1,k:k+1)\n   is a 2-by-2 diagonal block."), ('W', 'W is COMPLEX array, dimension (LDW,NB)'), ('LDW', 'LDW is INTEGER\nThe leading dimension of the array W.  LDW >= max(1,N).'), ('INFO', 'INFO is INTEGER\n= 0: successful exit\n> 0: if INFO = k, D(k,k) is exactly zero.  The factorization\n     has been completed, but the block diagonal matrix D is\n     exactly singular.'))
