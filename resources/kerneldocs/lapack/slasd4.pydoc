(('slasd4', 'This subroutine computes the square root of the I-th updated\neigenvalue of a positive symmetric rank-one modification to\na positive diagonal matrix whose entries are given as the squares\nof the corresponding entries in the array d, and that\n\n       0 <= D(i) < D(j)  for  i < j\n\nand that RHO > 0. This is arranged by the calling routine, and is\nno loss in generality.  The rank-one modified system is thus\n\n       diag( D ) * diag( D ) +  RHO * Z * Z_transpose.\n\nwhere we assume the Euclidean norm of Z is 1.\n\nThe method consists of approximating the rational functions in the\nsecular equation by simpler interpolating rational functions.'), ('N', 'N is INTEGER\nhe length of all arrays.'), ('I', 'I is INTEGER\nhe index of the eigenvalue to be computed.  1 <= I <= N.'), ('D', 'D is REAL array, dimension ( N )\nhe original eigenvalues.  It is assumed that they are in\nrder, 0 <= D(I) < D(J)  for I < J.'), ('Z', 'Z is REAL array, dimension ( N )\nhe components of the updating vector.'), ('DELTA', 'DELTA is REAL array, dimension ( N )\nf N .ne. 1, DELTA contains (D(j) - sigma_I) in its  j-th\nomponent.  If N = 1, then DELTA(1) = 1.  The vector DELTA\nontains the information necessary to construct the\nsingular) eigenvectors.'), ('RHO', 'RHO is REAL\nhe scalar in the symmetric updating formula.'), ('SIGMA', 'SIGMA is REAL\nhe computed sigma_I, the I-th updated eigenvalue.'), ('WORK', 'WORK is REAL array, dimension ( N )\nf N .ne. 1, WORK contains (D(j) + sigma_I) in its  j-th\nomponent.  If N = 1, then WORK( 1 ) = 1.'), ('INFO', 'INFO is INTEGER\n 0:  successful exit\n 0:  if INFO = 1, the updating process failed.'))
