(('slasq1', 'SLASQ1 computes the singular values of a real N-by-N bidiagonal\nmatrix with diagonal D and off-diagonal E. The singular values\nare computed to high relative accuracy, in the absence of\ndenormalization, underflow and overflow. The algorithm was first\npresented in\n\n"Accurate singular values and differential qd algorithms" by K. V.\nFernando and B. N. Parlett, Numer. Math., Vol-67, No. 2, pp. 191-230,\n1994,\n\nand the present implementation is described in "An implementation of\nthe dqds Algorithm (Positive Case)", LAPACK Working Note.'), ('N', 'N is INTEGER\ne number of rows and columns in the matrix. N >= 0.'), ('D', 'D is REAL array, dimension (N)\n entry, D contains the diagonal elements of the\ndiagonal matrix whose SVD is desired. On normal exit,\ncontains the singular values in decreasing order.'), ('E', 'E is REAL array, dimension (N)\n entry, elements E(1:N-1) contain the off-diagonal elements\n the bidiagonal matrix whose SVD is desired.\n exit, E is overwritten.'), ('WORK', 'WORK is REAL array, dimension (4*N)'), ('INFO', 'INFO is INTEGER\n0: successful exit\n0: if INFO = -i, the i-th argument had an illegal value\n0: the algorithm failed\n   = 1, a split was marked by a positive value in E\n   = 2, current block of Z not diagonalized after 100*N\n        iterations (in inner while loop)  On exit D and E\n        represent a matrix with the same singular values\n        which the calling subroutine could use to finish the\n        computation, or even feed back into SLASQ1\n   = 3, termination criterion of outer while loop not met \n        (program created more than N unreduced blocks)'))
