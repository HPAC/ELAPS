(('zlags2', 'ZLAGS2 computes 2-by-2 unitary matrices U, V and Q, such\nthat if ( UPPER ) then\n\n          U**H *A*Q = U**H *( A1 A2 )*Q = ( x  0  )\n                            ( 0  A3 )     ( x  x  )\nand\n          V**H*B*Q = V**H *( B1 B2 )*Q = ( x  0  )\n                           ( 0  B3 )     ( x  x  )\n\nor if ( .NOT.UPPER ) then\n\n          U**H *A*Q = U**H *( A1 0  )*Q = ( x  x  )\n                            ( A2 A3 )     ( 0  x  )\nand\n          V**H *B*Q = V**H *( B1 0  )*Q = ( x  x  )\n                            ( B2 B3 )     ( 0  x  )\nwhere\n\n  U = (   CSU    SNU ), V = (  CSV    SNV ),\n      ( -SNU**H  CSU )      ( -SNV**H CSV )\n\n  Q = (   CSQ    SNQ )\n      ( -SNQ**H  CSQ )\n\nThe rows of the transformed A and B are parallel. Moreover, if the\ninput 2-by-2 matrix A is not zero, then the transformed (1,1) entry\nof A is not zero. If the input matrices A and B are both not zero,\nthen the transformed (2,2) element of B is not zero, except when the\nfirst rows of input A and B are parallel and the second rows are\nzero.'), ('UPPER', 'UPPER is LOGICAL\n= .TRUE.: the input matrices A and B are upper triangular.\n= .FALSE.: the input matrices A and B are lower triangular.'), ('A1', 'A1 is DOUBLE PRECISION'), ('A2', 'A2 is COMPLEX*16'), ('A3', 'A3 is DOUBLE PRECISION\nOn entry, A1, A2 and A3 are elements of the input 2-by-2\nupper (lower) triangular matrix A.'), ('B1', 'B1 is DOUBLE PRECISION'), ('B2', 'B2 is COMPLEX*16'), ('B3', 'B3 is DOUBLE PRECISION\nOn entry, B1, B2 and B3 are elements of the input 2-by-2\nupper (lower) triangular matrix B.'), ('CSU', 'CSU is DOUBLE PRECISION'), ('SNU', 'SNU is COMPLEX*16\nThe desired unitary matrix U.'), ('CSV', 'CSV is DOUBLE PRECISION'), ('SNV', 'SNV is COMPLEX*16\nThe desired unitary matrix V.'), ('CSQ', 'CSQ is DOUBLE PRECISION'), ('SNQ', 'SNQ is COMPLEX*16\nThe desired unitary matrix Q.'))
