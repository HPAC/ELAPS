(('zheequb', 'ZHEEQUB computes row and column scalings intended to equilibrate a\nHermitian matrix A and reduce its condition number\n(with respect to the two-norm).  S contains the scale factors,\nS(i) = 1/sqrt(A(i,i)), chosen so that the scaled matrix B with\nelements B(i,j) = S(i)*A(i,j)*S(j) has ones on the diagonal.  This\nchoice of S puts the condition number of B within a factor N of the\nsmallest possible condition number over all possible diagonal\nscalings.'), ('UPLO', "UPLO is CHARACTER*1\n= 'U':  Upper triangles of A and B are stored;\n= 'L':  Lower triangles of A and B are stored."), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('A', 'A is COMPLEX*16 array, dimension (LDA,N)\nThe N-by-N Hermitian matrix whose scaling\nfactors are to be computed.  Only the diagonal elements of A\nare referenced.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('S', 'S is DOUBLE PRECISION array, dimension (N)\nIf INFO = 0, S contains the scale factors for A.'), ('SCOND', 'SCOND is DOUBLE PRECISION\nIf INFO = 0, S contains the ratio of the smallest S(i) to\nthe largest S(i).  If SCOND >= 0.1 and AMAX is neither too\nlarge nor too small, it is not worth scaling by S.'), ('AMAX', 'AMAX is DOUBLE PRECISION\nAbsolute value of largest matrix element.  If AMAX is very\nclose to overflow or very close to underflow, the matrix\nshould be scaled.'), ('WORK', 'WORK is COMPLEX*16 array, dimension (3*N)'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = i, the i-th diagonal element is nonpositive.'))
