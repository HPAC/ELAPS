(('dsbmv', 'DSBMV  performs the matrix-vector  operation\n\n   y := alpha*A*x + beta*y,\n\nwhere alpha and beta are scalars, x and y are n element vectors and\nA is an n by n symmetric band matrix, with k super-diagonals.'), ('UPLO', "UPLO is CHARACTER*1\n On entry, UPLO specifies whether the upper or lower\n triangular part of the band matrix A is being supplied as\n follows:\n\n    UPLO = 'U' or 'u'   The upper triangular part of A is\n                        being supplied.\n\n    UPLO = 'L' or 'l'   The lower triangular part of A is\n                        being supplied."), ('N', 'N is INTEGER\n On entry, N specifies the order of the matrix A.\n N must be at least zero.'), ('K', 'K is INTEGER\n On entry, K specifies the number of super-diagonals of the\n matrix A. K must satisfy  0 .le. K.'), ('ALPHA', 'ALPHA is DOUBLE PRECISION.\n On entry, ALPHA specifies the scalar alpha.'), ('A', "A is DOUBLE PRECISION array of DIMENSION ( LDA, n ).\n Before entry with UPLO = 'U' or 'u', the leading ( k + 1 )\n by n part of the array A must contain the upper triangular\n band part of the symmetric matrix, supplied column by\n column, with the leading diagonal of the matrix in row\n ( k + 1 ) of the array, the first super-diagonal starting at\n position 2 in row k, and so on. The top left k by k triangle\n of the array A is not referenced.\n The following program segment will transfer the upper\n triangular part of a symmetric band matrix from conventional\n full matrix storage to band storage:\n\n       DO 20, J = 1, N\n          M = K + 1 - J\n          DO 10, I = MAX( 1, J - K ), J\n             A( M + I, J ) = matrix( I, J )\n    10    CONTINUE\n    20 CONTINUE\n\n Before entry with UPLO = 'L' or 'l', the leading ( k + 1 )\n by n part of the array A must contain the lower triangular\n band part of the symmetric matrix, supplied column by\n column, with the leading diagonal of the matrix in row 1 of\n the array, the first sub-diagonal starting at position 1 in\n row 2, and so on. The bottom right k by k triangle of the\n array A is not referenced.\n The following program segment will transfer the lower\n triangular part of a symmetric band matrix from conventional\n full matrix storage to band storage:\n\n       DO 20, J = 1, N\n          M = 1 - J\n          DO 10, I = J, MIN( N, J + K )\n             A( M + I, J ) = matrix( I, J )\n    10    CONTINUE\n    20 CONTINUE"), ('LDA', 'LDA is INTEGER\n On entry, LDA specifies the first dimension of A as declared\n in the calling (sub) program. LDA must be at least\n ( k + 1 ).'), ('X', 'X is DOUBLE PRECISION array of DIMENSION at least\n ( 1 + ( n - 1 )*abs( INCX ) ).\n Before entry, the incremented array X must contain the\n vector x.'), ('INCX', 'INCX is INTEGER\n On entry, INCX specifies the increment for the elements of\n X. INCX must not be zero.'), ('BETA', 'BETA is DOUBLE PRECISION.\n On entry, BETA specifies the scalar beta.'), ('Y', 'Y is DOUBLE PRECISION array of DIMENSION at least\n ( 1 + ( n - 1 )*abs( INCY ) ).\n Before entry, the incremented array Y must contain the\n vector y. On exit, Y is overwritten by the updated vector y.'), ('INCY', 'INCY is INTEGER\n On entry, INCY specifies the increment for the elements of\n Y. INCY must not be zero.'))
