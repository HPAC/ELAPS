(('cgehrd', 'CGEHRD reduces a complex general matrix A to upper Hessenberg form H by\nan unitary similarity transformation:  Q**H * A * Q = H .'), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('ILO', 'ILO is INTEGER'), ('IHI', 'IHI is INTEGER\n\nIt is assumed that A is already upper triangular in rows\nand columns 1:ILO-1 and IHI+1:N. ILO and IHI are normally\nset by a previous call to CGEBAL; otherwise they should be\nset to 1 and N respectively. See Further Details.\n1 <= ILO <= IHI <= N, if N > 0; ILO=1 and IHI=0, if N=0.'), ('A', 'A is COMPLEX array, dimension (LDA,N)\nOn entry, the N-by-N general matrix to be reduced.\nOn exit, the upper triangle and the first subdiagonal of A\nare overwritten with the upper Hessenberg matrix H, and the\nelements below the first subdiagonal, with the array TAU,\nrepresent the unitary matrix Q as a product of elementary\nreflectors. See Further Details.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('TAU', 'TAU is COMPLEX array, dimension (N-1)\nThe scalar factors of the elementary reflectors (see Further\nDetails). Elements 1:ILO-1 and IHI:N-1 of TAU are set to\nzero.'), ('WORK', 'WORK is COMPLEX array, dimension (LWORK)\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe length of the array WORK.  LWORK >= max(1,N).\nFor optimum performance LWORK >= N*NB, where NB is the\noptimal blocksize.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value.'))
