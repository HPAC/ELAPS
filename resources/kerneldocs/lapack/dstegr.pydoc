(('dstegr', 'DSTEGR computes selected eigenvalues and, optionally, eigenvectors\nof a real symmetric tridiagonal matrix T. Any such unreduced matrix has\na well defined set of pairwise different real eigenvalues, the corresponding\nreal eigenvectors are pairwise orthogonal.\n\nThe spectrum may be computed either completely or partially by specifying\neither an interval (VL,VU] or a range of indices IL:IU for the desired\neigenvalues.\n\nDSTEGR is a compatability wrapper around the improved DSTEMR routine.\nSee DSTEMR for further details.\n\nOne important change is that the ABSTOL parameter no longer provides any\nbenefit and hence is no longer used.\n\nNote : DSTEGR and DSTEMR work only on machines which follow\nIEEE-754 floating-point standard in their handling of infinities and\nNaNs.  Normal execution may create these exceptiona values and hence\nmay abort due to a floating point exception in environments which\ndo not conform to the IEEE-754 standard.'), ('JOBZ', "JOBZ is CHARACTER*1\n= 'N':  Compute eigenvalues only;\n= 'V':  Compute eigenvalues and eigenvectors."), ('RANGE', "RANGE is CHARACTER*1\n= 'A': all eigenvalues will be found.\n= 'V': all eigenvalues in the half-open interval (VL,VU]\n       will be found.\n= 'I': the IL-th through IU-th eigenvalues will be found."), ('N', 'N is INTEGER\nThe order of the matrix.  N >= 0.'), ('D', 'D is DOUBLE PRECISION array, dimension (N)\nOn entry, the N diagonal elements of the tridiagonal matrix\nT. On exit, D is overwritten.'), ('E', 'E is DOUBLE PRECISION array, dimension (N)\nOn entry, the (N-1) subdiagonal elements of the tridiagonal\nmatrix T in elements 1 to N-1 of E. E(N) need not be set on\ninput, but is used internally as workspace.\nOn exit, E is overwritten.'), ('VL', 'VL is DOUBLE PRECISION'), ('VU', "VU is DOUBLE PRECISION\n\nIf RANGE='V', the lower and upper bounds of the interval to\nbe searched for eigenvalues. VL < VU.\nNot referenced if RANGE = 'A' or 'I'."), ('IL', 'IL is INTEGER'), ('IU', "IU is INTEGER\n\nIf RANGE='I', the indices (in ascending order) of the\nsmallest and largest eigenvalues to be returned.\n1 <= IL <= IU <= N, if N > 0.\nNot referenced if RANGE = 'A' or 'V'."), ('ABSTOL', 'ABSTOL is DOUBLE PRECISION\nUnused.  Was the absolute error tolerance for the\neigenvalues/eigenvectors in previous versions.'), ('M', "M is INTEGER\nThe total number of eigenvalues found.  0 <= M <= N.\nIf RANGE = 'A', M = N, and if RANGE = 'I', M = IU-IL+1."), ('W', 'W is DOUBLE PRECISION array, dimension (N)\nThe first M elements contain the selected eigenvalues in\nascending order.'), ('Z', "Z is DOUBLE PRECISION array, dimension (LDZ, max(1,M) )\nIf JOBZ = 'V', and if INFO = 0, then the first M columns of Z\ncontain the orthonormal eigenvectors of the matrix T\ncorresponding to the selected eigenvalues, with the i-th\ncolumn of Z holding the eigenvector associated with W(i).\nIf JOBZ = 'N', then Z is not referenced.\nNote: the user must ensure that at least max(1,M) columns are\nsupplied in the array Z; if RANGE = 'V', the exact value of M\nis not known in advance and an upper bound must be used.\nSupplying N columns is always safe."), ('LDZ', "LDZ is INTEGER\nThe leading dimension of the array Z.  LDZ >= 1, and if\nJOBZ = 'V', then LDZ >= max(1,N)."), ('ISUPPZ', "ISUPPZ is INTEGER ARRAY, dimension ( 2*max(1,M) )\nThe support of the eigenvectors in Z, i.e., the indices\nindicating the nonzero elements in Z. The i-th computed eigenvector\nis nonzero only in elements ISUPPZ( 2*i-1 ) through\nISUPPZ( 2*i ). This is relevant in the case when the matrix\nis split. ISUPPZ is only accessed when JOBZ is 'V' and N > 0."), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (LWORK)\nOn exit, if INFO = 0, WORK(1) returns the optimal\n(and minimal) LWORK.'), ('LWORK', "LWORK is INTEGER\nThe dimension of the array WORK. LWORK >= max(1,18*N)\nif JOBZ = 'V', and LWORK >= max(1,12*N) if JOBZ = 'N'.\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA."), ('IWORK', 'IWORK is INTEGER array, dimension (LIWORK)\nOn exit, if INFO = 0, IWORK(1) returns the optimal LIWORK.'), ('LIWORK', 'LIWORK is INTEGER\nThe dimension of the array IWORK.  LIWORK >= max(1,10*N)\nif the eigenvectors are desired, and LIWORK >= max(1,8*N)\nif only the eigenvalues are to be computed.\nIf LIWORK = -1, then a workspace query is assumed; the\nroutine only calculates the optimal size of the IWORK array,\nreturns this value as the first entry of the IWORK array, and\nno error message related to LIWORK is issued by XERBLA.'), ('INFO', 'INFO is INTEGER\nOn exit, INFO\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = 1X, internal error in DLARRE,\n      if INFO = 2X, internal error in DLARRV.\n      Here, the digit X = ABS( IINFO ) < 10, where IINFO is\n      the nonzero error code returned by DLARRE or\n      DLARRV, respectively.'))
