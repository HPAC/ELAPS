(('dsymv', 'DSYMV  performs the matrix-vector  operation\n\n   y := alpha*A*x + beta*y,\n\nwhere alpha and beta are scalars, x and y are n element vectors and\nA is an n by n symmetric matrix.'), ('UPLO', "UPLO is CHARACTER*1\n On entry, UPLO specifies whether the upper or lower\n triangular part of the array A is to be referenced as\n follows:\n\n    UPLO = 'U' or 'u'   Only the upper triangular part of A\n                        is to be referenced.\n\n    UPLO = 'L' or 'l'   Only the lower triangular part of A\n                        is to be referenced."), ('N', 'N is INTEGER\n On entry, N specifies the order of the matrix A.\n N must be at least zero.'), ('ALPHA', 'ALPHA is DOUBLE PRECISION.\n On entry, ALPHA specifies the scalar alpha.'), ('A', "A is DOUBLE PRECISION array of DIMENSION ( LDA, n ).\n Before entry with  UPLO = 'U' or 'u', the leading n by n\n upper triangular part of the array A must contain the upper\n triangular part of the symmetric matrix and the strictly\n lower triangular part of A is not referenced.\n Before entry with UPLO = 'L' or 'l', the leading n by n\n lower triangular part of the array A must contain the lower\n triangular part of the symmetric matrix and the strictly\n upper triangular part of A is not referenced."), ('LDA', 'LDA is INTEGER\n On entry, LDA specifies the first dimension of A as declared\n in the calling (sub) program. LDA must be at least\n max( 1, n ).'), ('X', 'X is DOUBLE PRECISION array of dimension at least\n ( 1 + ( n - 1 )*abs( INCX ) ).\n Before entry, the incremented array X must contain the n\n element vector x.'), ('INCX', 'INCX is INTEGER\n On entry, INCX specifies the increment for the elements of\n X. INCX must not be zero.'), ('BETA', 'BETA is DOUBLE PRECISION.\n On entry, BETA specifies the scalar beta. When BETA is\n supplied as zero then Y need not be set on input.'), ('Y', 'Y is DOUBLE PRECISION array of dimension at least\n ( 1 + ( n - 1 )*abs( INCY ) ).\n Before entry, the incremented array Y must contain the n\n element vector y. On exit, Y is overwritten by the updated\n vector y.'), ('INCY', 'INCY is INTEGER\n On entry, INCY specifies the increment for the elements of\n Y. INCY must not be zero.'))
