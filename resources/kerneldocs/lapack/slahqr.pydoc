(('slahqr', 'SLAHQR is an auxiliary routine called by SHSEQR to update the\neigenvalues and Schur decomposition already computed by SHSEQR, by\ndealing with the Hessenberg submatrix in rows and columns ILO to\nIHI.'), ('WANTT', 'WANTT is LOGICAL\n= .TRUE. : the full Schur form T is required;\n= .FALSE.: only eigenvalues are required.'), ('WANTZ', 'WANTZ is LOGICAL\n= .TRUE. : the matrix of Schur vectors Z is required;\n= .FALSE.: Schur vectors are not required.'), ('N', 'N is INTEGER\nThe order of the matrix H.  N >= 0.'), ('ILO', 'ILO is INTEGER'), ('IHI', 'IHI is INTEGER\nIt is assumed that H is already upper quasi-triangular in\nrows and columns IHI+1:N, and that H(ILO,ILO-1) = 0 (unless\nILO = 1). SLAHQR works primarily with the Hessenberg\nsubmatrix in rows and columns ILO to IHI, but applies\ntransformations to all of H if WANTT is .TRUE..\n1 <= ILO <= max(1,IHI); IHI <= N.'), ('H', 'H is REAL array, dimension (LDH,N)\nOn entry, the upper Hessenberg matrix H.\nOn exit, if INFO is zero and if WANTT is .TRUE., H is upper\nquasi-triangular in rows and columns ILO:IHI, with any\n2-by-2 diagonal blocks in standard form. If INFO is zero\nand WANTT is .FALSE., the contents of H are unspecified on\nexit.  The output state of H if INFO is nonzero is given\nbelow under the description of INFO.'), ('LDH', 'LDH is INTEGER\nThe leading dimension of the array H. LDH >= max(1,N).'), ('WR', 'WR is REAL array, dimension (N)'), ('WI', 'WI is REAL array, dimension (N)\nThe real and imaginary parts, respectively, of the computed\neigenvalues ILO to IHI are stored in the corresponding\nelements of WR and WI. If two eigenvalues are computed as a\ncomplex conjugate pair, they are stored in consecutive\nelements of WR and WI, say the i-th and (i+1)th, with\nWI(i) > 0 and WI(i+1) < 0. If WANTT is .TRUE., the\neigenvalues are stored in the same order as on the diagonal\nof the Schur form returned in H, with WR(i) = H(i,i), and, if\nH(i:i+1,i:i+1) is a 2-by-2 diagonal block,\nWI(i) = sqrt(H(i+1,i)*H(i,i+1)) and WI(i+1) = -WI(i).'), ('ILOZ', 'ILOZ is INTEGER'), ('IHIZ', 'IHIZ is INTEGER\nSpecify the rows of Z to which transformations must be\napplied if WANTZ is .TRUE..\n1 <= ILOZ <= ILO; IHI <= IHIZ <= N.'), ('Z', 'Z is REAL array, dimension (LDZ,N)\nIf WANTZ is .TRUE., on entry Z must contain the current\nmatrix Z of transformations accumulated by SHSEQR, and on\nexit Z has been updated; transformations are applied only to\nthe submatrix Z(ILOZ:IHIZ,ILO:IHI).\nIf WANTZ is .FALSE., Z is not referenced.'), ('LDZ', 'LDZ is INTEGER\nThe leading dimension of the array Z. LDZ >= max(1,N).'), ('INFO', 'INFO is INTEGER\n =   0: successful exit\n.GT. 0: If INFO = i, SLAHQR failed to compute all the\n        eigenvalues ILO to IHI in a total of 30 iterations\n        per eigenvalue; elements i+1:ihi of WR and WI\n        contain those eigenvalues which have been\n        successfully computed.\n\n        If INFO .GT. 0 and WANTT is .FALSE., then on exit,\n        the remaining unconverged eigenvalues are the\n        eigenvalues of the upper Hessenberg matrix rows\n        and columns ILO thorugh INFO of the final, output\n        value of H.\n\n        If INFO .GT. 0 and WANTT is .TRUE., then on exit\n(*)       (initial value of H)*U  = U*(final value of H)\n        where U is an orthognal matrix.    The final\n        value of H is upper Hessenberg and triangular in\n        rows and columns INFO+1 through IHI.\n\n        If INFO .GT. 0 and WANTZ is .TRUE., then on exit\n            (final value of Z)  = (initial value of Z)*U\n        where U is the orthogonal matrix in (*)\n        (regardless of the value of WANTT.)'))
