(('sopmtr', "SOPMTR overwrites the general real M-by-N matrix C with\n\n                SIDE = 'L'     SIDE = 'R'\nTRANS = 'N':      Q * C          C * Q\nTRANS = 'T':      Q**T * C       C * Q**T\n\nwhere Q is a real orthogonal matrix of order nq, with nq = m if\nSIDE = 'L' and nq = n if SIDE = 'R'. Q is defined as the product of\nnq-1 elementary reflectors, as returned by SSPTRD using packed\nstorage:\n\nif UPLO = 'U', Q = H(nq-1) . . . H(2) H(1);\n\nif UPLO = 'L', Q = H(1) H(2) . . . H(nq-1)."), ('SIDE', "SIDE is CHARACTER*1\n= 'L': apply Q or Q**T from the Left;\n= 'R': apply Q or Q**T from the Right."), ('UPLO', "UPLO is CHARACTER*1\n= 'U': Upper triangular packed storage used in previous\n       call to SSPTRD;\n= 'L': Lower triangular packed storage used in previous\n       call to SSPTRD."), ('TRANS', "TRANS is CHARACTER*1\n= 'N':  No transpose, apply Q;\n= 'T':  Transpose, apply Q**T."), ('M', 'M is INTEGER\nThe number of rows of the matrix C. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix C. N >= 0.'), ('AP', "AP is REAL array, dimension\n                     (M*(M+1)/2) if SIDE = 'L'\n                     (N*(N+1)/2) if SIDE = 'R'\nThe vectors which define the elementary reflectors, as\nreturned by SSPTRD.  AP is modified by the routine but\nrestored on exit."), ('TAU', "TAU is REAL array, dimension (M-1) if SIDE = 'L'\n                           or (N-1) if SIDE = 'R'\nTAU(i) must contain the scalar factor of the elementary\nreflector H(i), as returned by SSPTRD."), ('C', 'C is REAL array, dimension (LDC,N)\nOn entry, the M-by-N matrix C.\nOn exit, C is overwritten by Q*C or Q**T*C or C*Q**T or C*Q.'), ('LDC', 'LDC is INTEGER\nThe leading dimension of the array C. LDC >= max(1,M).'), ('WORK', "WORK is REAL array, dimension\n                         (N) if SIDE = 'L'\n                         (M) if SIDE = 'R'"), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value'))
