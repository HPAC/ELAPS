(('sgemv', 'SGEMV  performs one of the matrix-vector operations\n\n   y := alpha*A*x + beta*y,   or   y := alpha*A**T*x + beta*y,\n\nwhere alpha and beta are scalars, x and y are vectors and A is an\nm by n matrix.'), ('TRANS', "TRANS is CHARACTER*1\n On entry, TRANS specifies the operation to be performed as\n follows:\n\n    TRANS = 'N' or 'n'   y := alpha*A*x + beta*y.\n\n    TRANS = 'T' or 't'   y := alpha*A**T*x + beta*y.\n\n    TRANS = 'C' or 'c'   y := alpha*A**T*x + beta*y."), ('M', 'M is INTEGER\n On entry, M specifies the number of rows of the matrix A.\n M must be at least zero.'), ('N', 'N is INTEGER\n On entry, N specifies the number of columns of the matrix A.\n N must be at least zero.'), ('ALPHA', 'ALPHA is REAL\n On entry, ALPHA specifies the scalar alpha.'), ('A', 'A is REAL array of DIMENSION ( LDA, n ).\n Before entry, the leading m by n part of the array A must\n contain the matrix of coefficients.'), ('LDA', 'LDA is INTEGER\n On entry, LDA specifies the first dimension of A as declared\n in the calling (sub) program. LDA must be at least\n max( 1, m ).'), ('X', "X is REAL array of DIMENSION at least\n ( 1 + ( n - 1 )*abs( INCX ) ) when TRANS = 'N' or 'n'\n and at least\n ( 1 + ( m - 1 )*abs( INCX ) ) otherwise.\n Before entry, the incremented array X must contain the\n vector x."), ('INCX', 'INCX is INTEGER\n On entry, INCX specifies the increment for the elements of\n X. INCX must not be zero.'), ('BETA', 'BETA is REAL\n On entry, BETA specifies the scalar beta. When BETA is\n supplied as zero then Y need not be set on input.'), ('Y', "Y is REAL array of DIMENSION at least\n ( 1 + ( m - 1 )*abs( INCY ) ) when TRANS = 'N' or 'n'\n and at least\n ( 1 + ( n - 1 )*abs( INCY ) ) otherwise.\n Before entry with BETA non-zero, the incremented array Y\n must contain the vector y. On exit, Y is overwritten by the\n updated vector y."), ('INCY', 'INCY is INTEGER\n On entry, INCY specifies the increment for the elements of\n Y. INCY must not be zero.'))
