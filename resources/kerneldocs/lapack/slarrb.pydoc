(('slarrb', 'Given the relatively robust representation(RRR) L D L^T, SLARRB\ndoes "limited" bisection to refine the eigenvalues of L D L^T,\nW( IFIRST-OFFSET ) through W( ILAST-OFFSET ), to more accuracy. Initial\nguesses for these eigenvalues are input in W, the corresponding estimate\nof the error in these guesses and their gaps are input in WERR\nand WGAP, respectively. During bisection, intervals\n[left, right] are maintained by storing their mid-points and\nsemi-widths in the arrays W and WERR respectively.'), ('N', 'N is INTEGER\nThe order of the matrix.'), ('D', 'D is REAL array, dimension (N)\nThe N diagonal elements of the diagonal matrix D.'), ('LLD', 'LLD is REAL array, dimension (N-1)\nThe (N-1) elements L(i)*L(i)*D(i).'), ('IFIRST', 'IFIRST is INTEGER\nThe index of the first eigenvalue to be computed.'), ('ILAST', 'ILAST is INTEGER\nThe index of the last eigenvalue to be computed.'), ('RTOL1', 'RTOL1 is REAL'), ('RTOL2', 'RTOL2 is REAL\nTolerance for the convergence of the bisection intervals.\nAn interval [LEFT,RIGHT] has converged if\nRIGHT-LEFT.LT.MAX( RTOL1*GAP, RTOL2*MAX(|LEFT|,|RIGHT|) )\nwhere GAP is the (estimated) distance to the nearest\neigenvalue.'), ('OFFSET', 'OFFSET is INTEGER\nOffset for the arrays W, WGAP and WERR, i.e., the IFIRST-OFFSET\nthrough ILAST-OFFSET elements of these arrays are to be used.'), ('W', 'W is REAL array, dimension (N)\nOn input, W( IFIRST-OFFSET ) through W( ILAST-OFFSET ) are\nestimates of the eigenvalues of L D L^T indexed IFIRST throug\nILAST.\nOn output, these estimates are refined.'), ('WGAP', 'WGAP is REAL array, dimension (N-1)\nOn input, the (estimated) gaps between consecutive\neigenvalues of L D L^T, i.e., WGAP(I-OFFSET) is the gap between\neigenvalues I and I+1. Note that if IFIRST.EQ.ILAST\nthen WGAP(IFIRST-OFFSET) must be set to ZERO.\nOn output, these gaps are refined.'), ('WERR', 'WERR is REAL array, dimension (N)\nOn input, WERR( IFIRST-OFFSET ) through WERR( ILAST-OFFSET ) are\nthe errors in the estimates of the corresponding elements in W.\nOn output, these errors are refined.'), ('WORK', 'WORK is REAL array, dimension (2*N)\nWorkspace.'), ('IWORK', 'IWORK is INTEGER array, dimension (2*N)\nWorkspace.'), ('PIVMIN', 'PIVMIN is REAL\nThe minimum pivot in the Sturm sequence.'), ('SPDIAM', 'SPDIAM is REAL\nThe spectral diameter of the matrix.'), ('TWIST', 'TWIST is INTEGER\nThe twist index for the twisted factorization that is used\nfor the negcount.\nTWIST = N: Compute negcount from L D L^T - LAMBDA I = L+ D+ L+^T\nTWIST = 1: Compute negcount from L D L^T - LAMBDA I = U- D- U-^T\nTWIST = R: Compute negcount from L D L^T - LAMBDA I = N(r) D(r) N(r)'), ('INFO', 'INFO is INTEGER\nError flag.'))
