(('clagtm', 'CLAGTM performs a matrix-vector product of the form\n\n   B := alpha * A * X + beta * B\n\nwhere A is a tridiagonal matrix of order N, B and X are N by NRHS\nmatrices, and alpha and beta are real scalars, each of which may be\n0., 1., or -1.'), ('TRANS', "TRANS is CHARACTER*1\nSpecifies the operation applied to A.\n= 'N':  No transpose, B := alpha * A * X + beta * B\n= 'T':  Transpose,    B := alpha * A**T * X + beta * B\n= 'C':  Conjugate transpose, B := alpha * A**H * X + beta * B"), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('NRHS', 'NRHS is INTEGER\nThe number of right hand sides, i.e., the number of columns\nof the matrices X and B.'), ('ALPHA', 'ALPHA is REAL\nThe scalar alpha.  ALPHA must be 0., 1., or -1.; otherwise,\nit is assumed to be 0.'), ('DL', 'DL is COMPLEX array, dimension (N-1)\nThe (n-1) sub-diagonal elements of T.'), ('D', 'D is COMPLEX array, dimension (N)\nThe diagonal elements of T.'), ('DU', 'DU is COMPLEX array, dimension (N-1)\nThe (n-1) super-diagonal elements of T.'), ('X', 'X is COMPLEX array, dimension (LDX,NRHS)\nThe N by NRHS matrix X.'), ('LDX', 'LDX is INTEGER\nThe leading dimension of the array X.  LDX >= max(N,1).'), ('BETA', 'BETA is REAL\nThe scalar beta.  BETA must be 0., 1., or -1.; otherwise,\nit is assumed to be 1.'), ('B', 'B is COMPLEX array, dimension (LDB,NRHS)\nOn entry, the N by NRHS matrix B.\nOn exit, B is overwritten by the matrix expression\nB := alpha * A * X + beta * B.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B.  LDB >= max(N,1).'))
