(('csptrf', 'CSPTRF computes the factorization of a complex symmetric matrix A\nstored in packed format using the Bunch-Kaufman diagonal pivoting\nmethod:\n\n   A = U*D*U**T  or  A = L*D*L**T\n\nwhere U (or L) is a product of permutation and unit upper (lower)\ntriangular matrices, and D is symmetric and block diagonal with\n1-by-1 and 2-by-2 diagonal blocks.'), ('UPLO', "UPLO is CHARACTER*1\n= 'U':  Upper triangle of A is stored;\n= 'L':  Lower triangle of A is stored."), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('AP', "AP is COMPLEX array, dimension (N*(N+1)/2)\nOn entry, the upper or lower triangle of the symmetric matrix\nA, packed columnwise in a linear array.  The j-th column of A\nis stored in the array AP as follows:\nif UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\nif UPLO = 'L', AP(i + (j-1)*(2n-j)/2) = A(i,j) for j<=i<=n.\n\nOn exit, the block diagonal matrix D and the multipliers used\nto obtain the factor U or L, stored as a packed triangular\nmatrix overwriting A (see below for further details)."), ('IPIV', "IPIV is INTEGER array, dimension (N)\nDetails of the interchanges and the block structure of D.\nIf IPIV(k) > 0, then rows and columns k and IPIV(k) were\ninterchanged and D(k,k) is a 1-by-1 diagonal block.\nIf UPLO = 'U' and IPIV(k) = IPIV(k-1) < 0, then rows and\ncolumns k-1 and -IPIV(k) were interchanged and D(k-1:k,k-1:k)\nis a 2-by-2 diagonal block.  If UPLO = 'L' and IPIV(k) =\nIPIV(k+1) < 0, then rows and columns k+1 and -IPIV(k) were\ninterchanged and D(k:k+1,k:k+1) is a 2-by-2 diagonal block."), ('INFO', 'INFO is INTEGER\n= 0: successful exit\n< 0: if INFO = -i, the i-th argument had an illegal value\n> 0: if INFO = i, D(i,i) is exactly zero.  The factorization\n     has been completed, but the block diagonal matrix D is\n     exactly singular, and division by zero will occur if it\n     is used to solve a system of equations.'))
