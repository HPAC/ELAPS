(('shgeqz', 'SHGEQZ computes the eigenvalues of a real matrix pair (H,T),\nwhere H is an upper Hessenberg matrix and T is upper triangular,\nusing the double-shift QZ method.\nMatrix pairs of this type are produced by the reduction to\ngeneralized upper Hessenberg form of a real matrix pair (A,B):\n\n   A = Q1*H*Z1**T,  B = Q1*T*Z1**T,\n\nas computed by SGGHRD.\n\nIf JOB=\'S\', then the Hessenberg-triangular pair (H,T) is\nalso reduced to generalized Schur form,\n\n   H = Q*S*Z**T,  T = Q*P*Z**T,\n\nwhere Q and Z are orthogonal matrices, P is an upper triangular\nmatrix, and S is a quasi-triangular matrix with 1-by-1 and 2-by-2\ndiagonal blocks.\n\nThe 1-by-1 blocks correspond to real eigenvalues of the matrix pair\n(H,T) and the 2-by-2 blocks correspond to complex conjugate pairs of\neigenvalues.\n\nAdditionally, the 2-by-2 upper triangular diagonal blocks of P\ncorresponding to 2-by-2 blocks of S are reduced to positive diagonal\nform, i.e., if S(j+1,j) is non-zero, then P(j+1,j) = P(j,j+1) = 0,\nP(j,j) > 0, and P(j+1,j+1) > 0.\n\nOptionally, the orthogonal matrix Q from the generalized Schur\nfactorization may be postmultiplied into an input matrix Q1, and the\northogonal matrix Z may be postmultiplied into an input matrix Z1.\nIf Q1 and Z1 are the orthogonal matrices from SGGHRD that reduced\nthe matrix pair (A,B) to generalized upper Hessenberg form, then the\noutput matrices Q1*Q and Z1*Z are the orthogonal factors from the\ngeneralized Schur factorization of (A,B):\n\n   A = (Q1*Q)*S*(Z1*Z)**T,  B = (Q1*Q)*P*(Z1*Z)**T.\n\nTo avoid overflow, eigenvalues of the matrix pair (H,T) (equivalently,\nof (A,B)) are computed as a pair of values (alpha,beta), where alpha is\ncomplex and beta real.\nIf beta is nonzero, lambda = alpha / beta is an eigenvalue of the\ngeneralized nonsymmetric eigenvalue problem (GNEP)\n   A*x = lambda*B*x\nand if alpha is nonzero, mu = beta / alpha is an eigenvalue of the\nalternate form of the GNEP\n   mu*A*y = B*y.\nReal eigenvalues can be read directly from the generalized Schur\nform: \n  alpha = S(i,i), beta = P(i,i).\n\nRef: C.B. Moler & G.W. Stewart, "An Algorithm for Generalized Matrix\n     Eigenvalue Problems", SIAM J. Numer. Anal., 10(1973),\n     pp. 241--256.'), ('JOB', "JOB is CHARACTER*1\n= 'E': Compute eigenvalues only;\n= 'S': Compute eigenvalues and the Schur form. "), ('COMPQ', "COMPQ is CHARACTER*1\n= 'N': Left Schur vectors (Q) are not computed;\n= 'I': Q is initialized to the unit matrix and the matrix Q\n       of left Schur vectors of (H,T) is returned;\n= 'V': Q must contain an orthogonal matrix Q1 on entry and\n       the product Q1*Q is returned."), ('COMPZ', "COMPZ is CHARACTER*1\n= 'N': Right Schur vectors (Z) are not computed;\n= 'I': Z is initialized to the unit matrix and the matrix Z\n       of right Schur vectors of (H,T) is returned;\n= 'V': Z must contain an orthogonal matrix Z1 on entry and\n       the product Z1*Z is returned."), ('N', 'N is INTEGER\nThe order of the matrices H, T, Q, and Z.  N >= 0.'), ('ILO', 'ILO is INTEGER'), ('IHI', 'IHI is INTEGER\nILO and IHI mark the rows and columns of H which are in\nHessenberg form.  It is assumed that A is already upper\ntriangular in rows and columns 1:ILO-1 and IHI+1:N.\nIf N > 0, 1 <= ILO <= IHI <= N; if N = 0, ILO=1 and IHI=0.'), ('H', "H is REAL array, dimension (LDH, N)\nOn entry, the N-by-N upper Hessenberg matrix H.\nOn exit, if JOB = 'S', H contains the upper quasi-triangular\nmatrix S from the generalized Schur factorization.\nIf JOB = 'E', the diagonal blocks of H match those of S, but\nthe rest of H is unspecified."), ('LDH', 'LDH is INTEGER\nThe leading dimension of the array H.  LDH >= max( 1, N ).'), ('T', "T is REAL array, dimension (LDT, N)\nOn entry, the N-by-N upper triangular matrix T.\nOn exit, if JOB = 'S', T contains the upper triangular\nmatrix P from the generalized Schur factorization;\n2-by-2 diagonal blocks of P corresponding to 2-by-2 blocks of S\nare reduced to positive diagonal form, i.e., if H(j+1,j) is\nnon-zero, then T(j+1,j) = T(j,j+1) = 0, T(j,j) > 0, and\nT(j+1,j+1) > 0.\nIf JOB = 'E', the diagonal blocks of T match those of P, but\nthe rest of T is unspecified."), ('LDT', 'LDT is INTEGER\nThe leading dimension of the array T.  LDT >= max( 1, N ).'), ('ALPHAR', 'ALPHAR is REAL array, dimension (N)\nThe real parts of each scalar alpha defining an eigenvalue\nof GNEP.'), ('ALPHAI', 'ALPHAI is REAL array, dimension (N)\nThe imaginary parts of each scalar alpha defining an\neigenvalue of GNEP.\nIf ALPHAI(j) is zero, then the j-th eigenvalue is real; if\npositive, then the j-th and (j+1)-st eigenvalues are a\ncomplex conjugate pair, with ALPHAI(j+1) = -ALPHAI(j).'), ('BETA', 'BETA is REAL array, dimension (N)\nThe scalars beta that define the eigenvalues of GNEP.\nTogether, the quantities alpha = (ALPHAR(j),ALPHAI(j)) and\nbeta = BETA(j) represent the j-th eigenvalue of the matrix\npair (A,B), in one of the forms lambda = alpha/beta or\nmu = beta/alpha.  Since either lambda or mu may overflow,\nthey should not, in general, be computed.'), ('Q', "Q is REAL array, dimension (LDQ, N)\nOn entry, if COMPZ = 'V', the orthogonal matrix Q1 used in\nthe reduction of (A,B) to generalized Hessenberg form.\nOn exit, if COMPZ = 'I', the orthogonal matrix of left Schur\nvectors of (H,T), and if COMPZ = 'V', the orthogonal matrix\nof left Schur vectors of (A,B).\nNot referenced if COMPZ = 'N'."), ('LDQ', "LDQ is INTEGER\nThe leading dimension of the array Q.  LDQ >= 1.\nIf COMPQ='V' or 'I', then LDQ >= N."), ('Z', "Z is REAL array, dimension (LDZ, N)\nOn entry, if COMPZ = 'V', the orthogonal matrix Z1 used in\nthe reduction of (A,B) to generalized Hessenberg form.\nOn exit, if COMPZ = 'I', the orthogonal matrix of\nright Schur vectors of (H,T), and if COMPZ = 'V', the\northogonal matrix of right Schur vectors of (A,B).\nNot referenced if COMPZ = 'N'."), ('LDZ', "LDZ is INTEGER\nThe leading dimension of the array Z.  LDZ >= 1.\nIf COMPZ='V' or 'I', then LDZ >= N."), ('WORK', 'WORK is REAL array, dimension (MAX(1,LWORK))\nOn exit, if INFO >= 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK.  LWORK >= max(1,N).\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('INFO', 'INFO is INTEGER\n= 0: successful exit\n< 0: if INFO = -i, the i-th argument had an illegal value\n= 1,...,N: the QZ iteration did not converge.  (H,T) is not\n           in Schur form, but ALPHAR(i), ALPHAI(i), and\n           BETA(i), i=INFO+1,...,N should be correct.\n= N+1,...,2*N: the shift calculation failed.  (H,T) is not\n           in Schur form, but ALPHAR(i), ALPHAI(i), and\n           BETA(i), i=INFO-N+1,...,N should be correct.'))
