(('zunmhr', "ZUNMHR overwrites the general complex M-by-N matrix C with\n\n                SIDE = 'L'     SIDE = 'R'\nTRANS = 'N':      Q * C          C * Q\nTRANS = 'C':      Q**H * C       C * Q**H\n\nwhere Q is a complex unitary matrix of order nq, with nq = m if\nSIDE = 'L' and nq = n if SIDE = 'R'. Q is defined as the product of\nIHI-ILO elementary reflectors, as returned by ZGEHRD:\n\nQ = H(ilo) H(ilo+1) . . . H(ihi-1)."), ('SIDE', "SIDE is CHARACTER*1\n= 'L': apply Q or Q**H from the Left;\n= 'R': apply Q or Q**H from the Right."), ('TRANS', "TRANS is CHARACTER*1\n= 'N': apply Q  (No transpose)\n= 'C': apply Q**H (Conjugate transpose)"), ('M', 'M is INTEGER\nThe number of rows of the matrix C. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix C. N >= 0.'), ('ILO', 'ILO is INTEGER'), ('IHI', "IHI is INTEGER\n\nILO and IHI must have the same values as in the previous call\nof ZGEHRD. Q is equal to the unit matrix except in the\nsubmatrix Q(ilo+1:ihi,ilo+1:ihi).\nIf SIDE = 'L', then 1 <= ILO <= IHI <= M, if M > 0, and\nILO = 1 and IHI = 0, if M = 0;\nif SIDE = 'R', then 1 <= ILO <= IHI <= N, if N > 0, and\nILO = 1 and IHI = 0, if N = 0."), ('A', "A is COMPLEX*16 array, dimension\n                     (LDA,M) if SIDE = 'L'\n                     (LDA,N) if SIDE = 'R'\nThe vectors which define the elementary reflectors, as\nreturned by ZGEHRD."), ('LDA', "LDA is INTEGER\nThe leading dimension of the array A.\nLDA >= max(1,M) if SIDE = 'L'; LDA >= max(1,N) if SIDE = 'R'."), ('TAU', "TAU is COMPLEX*16 array, dimension\n                     (M-1) if SIDE = 'L'\n                     (N-1) if SIDE = 'R'\nTAU(i) must contain the scalar factor of the elementary\nreflector H(i), as returned by ZGEHRD."), ('C', 'C is COMPLEX*16 array, dimension (LDC,N)\nOn entry, the M-by-N matrix C.\nOn exit, C is overwritten by Q*C or Q**H*C or C*Q**H or C*Q.'), ('LDC', 'LDC is INTEGER\nThe leading dimension of the array C. LDC >= max(1,M).'), ('WORK', 'WORK is COMPLEX*16 array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', "LWORK is INTEGER\nThe dimension of the array WORK.\nIf SIDE = 'L', LWORK >= max(1,N);\nif SIDE = 'R', LWORK >= max(1,M).\nFor optimum performance LWORK >= N*NB if SIDE = 'L', and\nLWORK >= M*NB if SIDE = 'R', where NB is the optimal\nblocksize.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA."), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value'))
