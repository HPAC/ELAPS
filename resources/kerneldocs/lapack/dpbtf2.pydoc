(('dpbtf2', "DPBTF2 computes the Cholesky factorization of a real symmetric\npositive definite band matrix A.\n\nThe factorization has the form\n   A = U**T * U ,  if UPLO = 'U', or\n   A = L  * L**T,  if UPLO = 'L',\nwhere U is an upper triangular matrix, U**T is the transpose of U, and\nL is lower triangular.\n\nThis is the unblocked version of the algorithm, calling Level 2 BLAS."), ('UPLO', "UPLO is CHARACTER*1\nSpecifies whether the upper or lower triangular part of the\nsymmetric matrix A is stored:\n= 'U':  Upper triangular\n= 'L':  Lower triangular"), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('KD', "KD is INTEGER\nThe number of super-diagonals of the matrix A if UPLO = 'U',\nor the number of sub-diagonals if UPLO = 'L'.  KD >= 0."), ('AB', "AB is DOUBLE PRECISION array, dimension (LDAB,N)\nOn entry, the upper or lower triangle of the symmetric band\nmatrix A, stored in the first KD+1 rows of the array.  The\nj-th column of A is stored in the j-th column of the array AB\nas follows:\nif UPLO = 'U', AB(kd+1+i-j,j) = A(i,j) for max(1,j-kd)<=i<=j;\nif UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(n,j+kd).\n\nOn exit, if INFO = 0, the triangular factor U or L from the\nCholesky factorization A = U**T*U or A = L*L**T of the band\nmatrix A, in the same storage format as A."), ('LDAB', 'LDAB is INTEGER\nThe leading dimension of the array AB.  LDAB >= KD+1.'), ('INFO', 'INFO is INTEGER\n= 0: successful exit\n< 0: if INFO = -k, the k-th argument had an illegal value\n> 0: if INFO = k, the leading minor of order k is not\n     positive definite, and the factorization could not be\n     completed.'))
