(('zlassq', 'ZLASSQ returns the values scl and ssq such that\n\n   ( scl**2 )*ssq = x( 1 )**2 +...+ x( n )**2 + ( scale**2 )*sumsq,\n\nwhere x( i ) = abs( X( 1 + ( i - 1 )*INCX ) ). The value of sumsq is\nassumed to be at least unity and the value of ssq will then satisfy\n\n   1.0 .le. ssq .le. ( sumsq + 2*n ).\n\nscale is assumed to be non-negative and scl returns the value\n\n   scl = max( scale, abs( real( x( i ) ) ), abs( aimag( x( i ) ) ) ),\n          i\n\nscale and sumsq must be supplied in SCALE and SUMSQ respectively.\nSCALE and SUMSQ are overwritten by scl and ssq respectively.\n\nThe routine makes only one pass through the vector X.'), ('N', 'N is INTEGER\nThe number of elements to be used from the vector X.'), ('X', 'X is COMPLEX*16 array, dimension (N)\nThe vector x as described above.\n   x( i )  = X( 1 + ( i - 1 )*INCX ), 1 <= i <= n.'), ('INCX', 'INCX is INTEGER\nThe increment between successive values of the vector X.\nINCX > 0.'), ('SCALE', 'SCALE is DOUBLE PRECISION\nOn entry, the value  scale  in the equation above.\nOn exit, SCALE is overwritten with the value  scl .'), ('SUMSQ', 'SUMSQ is DOUBLE PRECISION\nOn entry, the value  sumsq  in the equation above.\nOn exit, SUMSQ is overwritten with the value  ssq .'))
