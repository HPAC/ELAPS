(('zgeqp3', 'ZGEQP3 computes a QR factorization with column pivoting of a\nmatrix A:  A*P = Q*R  using Level 3 BLAS.'), ('M', 'M is INTEGER\nThe number of rows of the matrix A. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix A.  N >= 0.'), ('A', 'A is COMPLEX*16 array, dimension (LDA,N)\nOn entry, the M-by-N matrix A.\nOn exit, the upper triangle of the array contains the\nmin(M,N)-by-N upper trapezoidal matrix R; the elements below\nthe diagonal, together with the array TAU, represent the\nunitary matrix Q as a product of min(M,N) elementary\nreflectors.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1,M).'), ('JPVT', 'JPVT is INTEGER array, dimension (N)\nOn entry, if JPVT(J).ne.0, the J-th column of A is permuted\nto the front of A*P (a leading column); if JPVT(J)=0,\nthe J-th column of A is a free column.\nOn exit, if JPVT(J)=K, then the J-th column of A*P was the\nthe K-th column of A.'), ('TAU', 'TAU is COMPLEX*16 array, dimension (min(M,N))\nThe scalar factors of the elementary reflectors.'), ('WORK', 'WORK is COMPLEX*16 array, dimension (MAX(1,LWORK))\nOn exit, if INFO=0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK. LWORK >= N+1.\nFor optimal performance LWORK >= ( N+1 )*NB, where NB\nis the optimal blocksize.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('RWORK', 'RWORK is DOUBLE PRECISION array, dimension (2*N)'), ('INFO', 'INFO is INTEGER\n= 0: successful exit.\n< 0: if INFO = -i, the i-th argument had an illegal value.'))
