(('ctfsm', 'Level 3 BLAS like routine for A in RFP Format.\n\nCTFSM solves the matrix equation\n\n   op( A )*X = alpha*B  or  X*op( A ) = alpha*B\n\nwhere alpha is a scalar, X and B are m by n matrices, A is a unit, or\nnon-unit,  upper or lower triangular matrix  and  op( A )  is one  of\n\n   op( A ) = A   or   op( A ) = A**H.\n\nA is in Rectangular Full Packed (RFP) Format.\n\nThe matrix X is overwritten on B.'), ('TRANSR', "TRANSR is CHARACTER*1\n= 'N':  The Normal Form of RFP A is stored;\n= 'C':  The Conjugate-transpose Form of RFP A is stored."), ('SIDE', "SIDE is CHARACTER*1\n On entry, SIDE specifies whether op( A ) appears on the left\n or right of X as follows:\n\n    SIDE = 'L' or 'l'   op( A )*X = alpha*B.\n\n    SIDE = 'R' or 'r'   X*op( A ) = alpha*B.\n\n Unchanged on exit."), ('UPLO', "UPLO is CHARACTER*1\n On entry, UPLO specifies whether the RFP matrix A came from\n an upper or lower triangular matrix as follows:\n UPLO = 'U' or 'u' RFP A came from an upper triangular matrix\n UPLO = 'L' or 'l' RFP A came from a  lower triangular matrix\n\n Unchanged on exit."), ('TRANS', "TRANS is CHARACTER*1\n On entry, TRANS  specifies the form of op( A ) to be used\n in the matrix multiplication as follows:\n\n    TRANS  = 'N' or 'n'   op( A ) = A.\n\n    TRANS  = 'C' or 'c'   op( A ) = conjg( A' ).\n\n Unchanged on exit."), ('DIAG', "DIAG is CHARACTER*1\n On entry, DIAG specifies whether or not RFP A is unit\n triangular as follows:\n\n    DIAG = 'U' or 'u'   A is assumed to be unit triangular.\n\n    DIAG = 'N' or 'n'   A is not assumed to be unit\n                        triangular.\n\n Unchanged on exit."), ('M', 'M is INTEGER\n On entry, M specifies the number of rows of B. M must be at\n least zero.\n Unchanged on exit.'), ('N', 'N is INTEGER\n On entry, N specifies the number of columns of B.  N must be\n at least zero.\n Unchanged on exit.'), ('ALPHA', 'ALPHA is COMPLEX\n On entry,  ALPHA specifies the scalar  alpha. When  alpha is\n zero then  A is not referenced and  B need not be set before\n entry.\n Unchanged on exit.'), ('A', "A is COMPLEX array, dimension (N*(N+1)/2)\n NT = N*(N+1)/2. On entry, the matrix A in RFP Format.\n RFP Format is described by TRANSR, UPLO and N as follows:\n If TRANSR='N' then RFP A is (0:N,0:K-1) when N is even;\n K=N/2. RFP A is (0:N-1,0:K) when N is odd; K=N/2. If\n TRANSR = 'C' then RFP is the Conjugate-transpose of RFP A as\n defined when TRANSR = 'N'. The contents of RFP A are defined\n by UPLO as follows: If UPLO = 'U' the RFP A contains the NT\n elements of upper packed A either in normal or\n conjugate-transpose Format. If UPLO = 'L' the RFP A contains\n the NT elements of lower packed A either in normal or\n conjugate-transpose Format. The LDA of RFP A is (N+1)/2 when\n TRANSR = 'C'. When TRANSR is 'N' the LDA is N+1 when N is\n even and is N when is odd.\n See the Note below for more details. Unchanged on exit."), ('B', 'B is COMPLEX array, dimension (LDB,N)\n Before entry,  the leading  m by n part of the array  B must\n contain  the  right-hand  side  matrix  B,  and  on exit  is\n overwritten by the solution matrix  X.'), ('LDB', 'LDB is INTEGER\n On entry, LDB specifies the first dimension of B as declared\n in  the  calling  (sub)  program.   LDB  must  be  at  least\n max( 1, m ).\n Unchanged on exit.'))
