(('zcgesv', "ZCGESV computes the solution to a complex system of linear equations\n   A * X = B,\nwhere A is an N-by-N matrix and X and B are N-by-NRHS matrices.\n\nZCGESV first attempts to factorize the matrix in COMPLEX and use this\nfactorization within an iterative refinement procedure to produce a\nsolution with COMPLEX*16 normwise backward error quality (see below).\nIf the approach fails the method switches to a COMPLEX*16\nfactorization and solve.\n\nThe iterative refinement is not going to be a winning strategy if\nthe ratio COMPLEX performance over COMPLEX*16 performance is too\nsmall. A reasonable strategy should take the number of right-hand\nsides and the size of the matrix into account. This might be done\nwith a call to ILAENV in the future. Up to now, we always try\niterative refinement.\n\nThe iterative refinement process is stopped if\n    ITER > ITERMAX\nor for all the RHS we have:\n    RNRM < SQRT(N)*XNRM*ANRM*EPS*BWDMAX\nwhere\n    o ITER is the number of the current iteration in the iterative\n      refinement process\n    o RNRM is the infinity-norm of the residual\n    o XNRM is the infinity-norm of the solution\n    o ANRM is the infinity-operator-norm of the matrix A\n    o EPS is the machine epsilon returned by DLAMCH('Epsilon')\nThe value ITERMAX and BWDMAX are fixed to 30 and 1.0D+00\nrespectively."), ('N', 'N is INTEGER\nThe number of linear equations, i.e., the order of the\nmatrix A.  N >= 0.'), ('NRHS', 'NRHS is INTEGER\nThe number of right hand sides, i.e., the number of columns\nof the matrix B.  NRHS >= 0.'), ('A', 'A is COMPLEX*16 array,\ndimension (LDA,N)\nOn entry, the N-by-N coefficient matrix A.\nOn exit, if iterative refinement has been successfully used\n(INFO.EQ.0 and ITER.GE.0, see description below), then A is\nunchanged, if double precision factorization has been used\n(INFO.EQ.0 and ITER.LT.0, see description below), then the\narray A contains the factors L and U from the factorization\nA = P*L*U; the unit diagonal elements of L are not stored.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('IPIV', 'IPIV is INTEGER array, dimension (N)\nThe pivot indices that define the permutation matrix P;\nrow i of the matrix was interchanged with row IPIV(i).\nCorresponds either to the single precision factorization\n(if INFO.EQ.0 and ITER.GE.0) or the double precision\nfactorization (if INFO.EQ.0 and ITER.LT.0).'), ('B', 'B is COMPLEX*16 array, dimension (LDB,NRHS)\nThe N-by-NRHS right hand side matrix B.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B.  LDB >= max(1,N).'), ('X', 'X is COMPLEX*16 array, dimension (LDX,NRHS)\nIf INFO = 0, the N-by-NRHS solution matrix X.'), ('LDX', 'LDX is INTEGER\nThe leading dimension of the array X.  LDX >= max(1,N).'), ('WORK', 'WORK is COMPLEX*16 array, dimension (N*NRHS)\nThis array is used to hold the residual vectors.'), ('SWORK', 'SWORK is COMPLEX array, dimension (N*(N+NRHS))\nThis array is used to use the single precision matrix and the\nright-hand sides or solutions in single precision.'), ('RWORK', 'RWORK is DOUBLE PRECISION array, dimension (N)'), ('ITER', 'ITER is INTEGER\n< 0: iterative refinement has failed, COMPLEX*16\n     factorization has been performed\n     -1 : the routine fell back to full precision for\n          implementation- or machine-specific reasons\n     -2 : narrowing the precision induced an overflow,\n          the routine fell back to full precision\n     -3 : failure of CGETRF\n     -31: stop the iterative refinement after the 30th\n          iterations\n> 0: iterative refinement has been sucessfully used.\n     Returns the number of iterations'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = i, U(i,i) computed in COMPLEX*16 is exactly\n      zero.  The factorization has been completed, but the\n      factor U is exactly singular, so the solution\n      could not be computed.'))
