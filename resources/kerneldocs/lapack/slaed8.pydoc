(('slaed8', 'SLAED8 merges the two sets of eigenvalues together into a single\nsorted set.  Then it tries to deflate the size of the problem.\nThere are two ways in which deflation can occur:  when two or more\neigenvalues are close together or if there is a tiny element in the\nZ vector.  For each such occurrence the order of the related secular\nequation problem is reduced by one.'), ('ICOMPQ', 'ICOMPQ is INTEGER\n= 0:  Compute eigenvalues only.\n= 1:  Compute eigenvectors of original dense symmetric matrix\n      also.  On entry, Q contains the orthogonal matrix used\n      to reduce the original matrix to tridiagonal form.'), ('K', 'K is INTEGER\nhe number of non-deflated eigenvalues, and the order of the\nelated secular equation.'), ('N', 'N is INTEGER\nhe dimension of the symmetric tridiagonal matrix.  N >= 0.'), ('QSIZ', 'QSIZ is INTEGER\nhe dimension of the orthogonal matrix used to reduce\nhe full matrix to tridiagonal form.  QSIZ >= N if ICOMPQ = 1.'), ('D', 'D is REAL array, dimension (N)\nn entry, the eigenvalues of the two submatrices to be\nombined.  On exit, the trailing (N-K) updated eigenvalues\nthose which were deflated) sorted into increasing order.'), ('Q', 'Q is REAL array, dimension (LDQ,N)\nf ICOMPQ = 0, Q is not referenced.  Otherwise,\nn entry, Q contains the eigenvectors of the partially solved\nystem which has been previously updated in matrix\nultiplies with other partially solved eigensystems.\nn exit, Q contains the trailing (N-K) updated eigenvectors\nthose which were deflated) in its last N-K columns.'), ('LDQ', 'LDQ is INTEGER\nhe leading dimension of the array Q.  LDQ >= max(1,N).'), ('INDXQ', 'INDXQ is INTEGER array, dimension (N)\nhe permutation which separately sorts the two sub-problems\nn D into ascending order.  Note that elements in the second\nalf of this permutation must first have CUTPNT added to\nheir values in order to be accurate.'), ('RHO', 'RHO is REAL\nn entry, the off-diagonal element associated with the rank-1\nut which originally split the two submatrices which are now\neing recombined.\nn exit, RHO has been modified to the value required by\nLAED3.'), ('CUTPNT', 'CUTPNT is INTEGER\nhe location of the last eigenvalue in the leading\nub-matrix.  min(1,N) <= CUTPNT <= N.'), ('Z', 'Z is REAL array, dimension (N)\nn entry, Z contains the updating vector (the last row of\nhe first sub-eigenvector matrix and the first row of the\necond sub-eigenvector matrix).\nn exit, the contents of Z are destroyed by the updating\nrocess.'), ('DLAMDA', 'DLAMDA is REAL array, dimension (N)\n copy of the first K eigenvalues which will be used by\nLAED3 to form the secular equation.'), ('Q2', 'Q2 is REAL array, dimension (LDQ2,N)\nf ICOMPQ = 0, Q2 is not referenced.  Otherwise,\n copy of the first K eigenvectors which will be used by\nLAED7 in a matrix multiply (SGEMM) to update the new\nigenvectors.'), ('LDQ2', 'LDQ2 is INTEGER\nhe leading dimension of the array Q2.  LDQ2 >= max(1,N).'), ('W', 'W is REAL array, dimension (N)\nhe first k values of the final deflation-altered z-vector and\nill be passed to SLAED3.'), ('PERM', 'PERM is INTEGER array, dimension (N)\nhe permutations (from deflation and sorting) to be applied\no each eigenblock.'), ('GIVPTR', 'GIVPTR is INTEGER\nhe number of Givens rotations which took place in this\nubproblem.'), ('GIVCOL', 'GIVCOL is INTEGER array, dimension (2, N)\nach pair of numbers indicates a pair of columns to take place\nn a Givens rotation.'), ('GIVNUM', 'GIVNUM is REAL array, dimension (2, N)\nach number indicates the S value to be used in the\norresponding Givens rotation.'), ('INDXP', 'INDXP is INTEGER array, dimension (N)\nhe permutation used to place deflated values of D at the end\nf the array.  INDXP(1:K) points to the nondeflated D-values\nnd INDXP(K+1:N) points to the deflated eigenvalues.'), ('INDX', 'INDX is INTEGER array, dimension (N)\nhe permutation used to sort the contents of D into ascending\nrder.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit.\n< 0:  if INFO = -i, the i-th argument had an illegal value.'))
