(('dlasdq', 'DLASDQ computes the singular value decomposition (SVD) of a real\n(upper or lower) bidiagonal matrix with diagonal D and offdiagonal\nE, accumulating the transformations if desired. Letting B denote\nthe input bidiagonal matrix, the algorithm computes orthogonal\nmatrices Q and P such that B = Q * S * P**T (P**T denotes the transpose\nof P). The singular values S are overwritten on D.\n\nThe input matrix U  is changed to U  * Q  if desired.\nThe input matrix VT is changed to P**T * VT if desired.\nThe input matrix C  is changed to Q**T * C  if desired.\n\nSee "Computing  Small Singular Values of Bidiagonal Matrices With\nGuaranteed High Relative Accuracy," by J. Demmel and W. Kahan,\nLAPACK Working Note #3, for a detailed description of the algorithm.'), ('UPLO', "UPLO is CHARACTER*1\n entry, UPLO specifies whether the input bidiagonal matrix\n upper or lower bidiagonal, and wether it is square are\nt.\n UPLO = 'U' or 'u'   B is upper bidiagonal.\n UPLO = 'L' or 'l'   B is lower bidiagonal."), ('SQRE', "SQRE is INTEGER\n0: then the input matrix is N-by-N.\n1: then the input matrix is N-by-(N+1) if UPLU = 'U' and\n   (N+1)-by-N if UPLU = 'L'.\n\ne bidiagonal matrix has\n= NL + NR + 1 rows and\n= N + SQRE >= N columns."), ('N', 'N is INTEGER\n entry, N specifies the number of rows and columns\n the matrix. N must be at least 0.'), ('NCVT', 'NCVT is INTEGER\n entry, NCVT specifies the number of columns of\ne matrix VT. NCVT must be at least 0.'), ('NRU', 'NRU is INTEGER\n entry, NRU specifies the number of rows of\ne matrix U. NRU must be at least 0.'), ('NCC', 'NCC is INTEGER\n entry, NCC specifies the number of columns of\ne matrix C. NCC must be at least 0.'), ('D', 'D is DOUBLE PRECISION array, dimension (N)\n entry, D contains the diagonal entries of the\ndiagonal matrix whose SVD is desired. On normal exit,\ncontains the singular values in ascending order.'), ('E', 'E is DOUBLE PRECISION array.\nmension is (N-1) if SQRE = 0 and N if SQRE = 1.\n entry, the entries of E contain the offdiagonal entries\n the bidiagonal matrix whose SVD is desired. On normal\nit, E will contain 0. If the algorithm does not converge,\nand E will contain the diagonal and superdiagonal entries\n a bidiagonal matrix orthogonally equivalent to the one\nven as input.'), ('VT', 'VT is DOUBLE PRECISION array, dimension (LDVT, NCVT)\n entry, contains a matrix which on exit has been\nemultiplied by P**T, dimension N-by-NCVT if SQRE = 0\nd (N+1)-by-NCVT if SQRE = 1 (not referenced if NCVT=0).'), ('LDVT', 'LDVT is INTEGER\n entry, LDVT specifies the leading dimension of VT as\nclared in the calling (sub) program. LDVT must be at\nast 1. If NCVT is nonzero LDVT must also be at least N.'), ('U', 'U is DOUBLE PRECISION array, dimension (LDU, N)\n entry, contains a  matrix which on exit has been\nstmultiplied by Q, dimension NRU-by-N if SQRE = 0\nd NRU-by-(N+1) if SQRE = 1 (not referenced if NRU=0).'), ('LDU', 'LDU is INTEGER\n entry, LDU  specifies the leading dimension of U as\nclared in the calling (sub) program. LDU must be at\nast max( 1, NRU ) .'), ('C', 'C is DOUBLE PRECISION array, dimension (LDC, NCC)\n entry, contains an N-by-NCC matrix which on exit\ns been premultiplied by Q**T  dimension N-by-NCC if SQRE = 0\nd (N+1)-by-NCC if SQRE = 1 (not referenced if NCC=0).'), ('LDC', 'LDC is INTEGER\n entry, LDC  specifies the leading dimension of C as\nclared in the calling (sub) program. LDC must be at\nast 1. If NCC is nonzero, LDC must also be at least N.'), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (4*N)\nrkspace. Only referenced if one of NCVT, NRU, or NCC is\nnzero, and if N is at least 2.'), ('INFO', 'INFO is INTEGER\n exit, a value of 0 indicates a successful exit.\n INFO < 0, argument number -INFO is illegal.\n INFO > 0, the algorithm did not converge, and INFO\necifies how many superdiagonals did not converge.'))
