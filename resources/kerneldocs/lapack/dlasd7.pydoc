(('dlasd7', 'DLASD7 merges the two sets of singular values together into a single\nsorted set. Then it tries to deflate the size of the problem. There\nare two ways in which deflation can occur:  when two or more singular\nvalues are close together or if there is a tiny entry in the Z\nvector. For each such occurrence the order of the related\nsecular equation problem is reduced by one.\n\nDLASD7 is called from DLASD6.'), ('ICOMPQ', 'ICOMPQ is INTEGER\nSpecifies whether singular vectors are to be computed\nin compact form, as follows:\n= 0: Compute singular values only.\n= 1: Compute singular vectors of upper\n     bidiagonal matrix in compact form.'), ('NL', 'NL is INTEGER\nhe row dimension of the upper block. NL >= 1.'), ('NR', 'NR is INTEGER\nhe row dimension of the lower block. NR >= 1.'), ('SQRE', 'SQRE is INTEGER\n 0: the lower block is an NR-by-NR square matrix.\n 1: the lower block is an NR-by-(NR+1) rectangular matrix.\n\nhe bidiagonal matrix has\n = NL + NR + 1 rows and\n = N + SQRE >= N columns.'), ('K', 'K is INTEGER\nontains the dimension of the non-deflated matrix, this is\nhe order of the related secular equation. 1 <= K <=N.'), ('D', 'D is DOUBLE PRECISION array, dimension ( N )\nn entry D contains the singular values of the two submatrices\no be combined. On exit D contains the trailing (N-K) updated\ningular values (those which were deflated) sorted into\nncreasing order.'), ('Z', 'Z is DOUBLE PRECISION array, dimension ( M )\nn exit Z contains the updating row vector in the secular\nquation.'), ('ZW', 'ZW is DOUBLE PRECISION array, dimension ( M )\norkspace for Z.'), ('VF', 'VF is DOUBLE PRECISION array, dimension ( M )\nn entry, VF(1:NL+1) contains the first components of all\night singular vectors of the upper block; and VF(NL+2:M)\nontains the first components of all right singular vectors\nf the lower block. On exit, VF contains the first components\nf all right singular vectors of the bidiagonal matrix.'), ('VFW', 'VFW is DOUBLE PRECISION array, dimension ( M )\norkspace for VF.'), ('VL', 'VL is DOUBLE PRECISION array, dimension ( M )\nn entry, VL(1:NL+1) contains the  last components of all\night singular vectors of the upper block; and VL(NL+2:M)\nontains the last components of all right singular vectors\nf the lower block. On exit, VL contains the last components\nf all right singular vectors of the bidiagonal matrix.'), ('VLW', 'VLW is DOUBLE PRECISION array, dimension ( M )\norkspace for VL.'), ('ALPHA', 'ALPHA is DOUBLE PRECISION\nontains the diagonal element associated with the added row.'), ('BETA', 'BETA is DOUBLE PRECISION\nontains the off-diagonal element associated with the added\now.'), ('DSIGMA', 'DSIGMA is DOUBLE PRECISION array, dimension ( N )\nontains a copy of the diagonal elements (K-1 singular values\nnd one zero) in the secular equation.'), ('IDX', 'IDX is INTEGER array, dimension ( N )\nhis will contain the permutation used to sort the contents of\n into ascending order.'), ('IDXP', 'IDXP is INTEGER array, dimension ( N )\nhis will contain the permutation used to place deflated\nalues of D at the end of the array. On output IDXP(2:K)\noints to the nondeflated D-values and IDXP(K+1:N)\noints to the deflated singular values.'), ('IDXQ', 'IDXQ is INTEGER array, dimension ( N )\nhis contains the permutation which separately sorts the two\nub-problems in D into ascending order.  Note that entries in\nhe first half of this permutation must first be moved one\nosition backward; and entries in the second half\nust first have NL+1 added to their values.'), ('PERM', 'PERM is INTEGER array, dimension ( N )\nhe permutations (from deflation and sorting) to be applied\no each singular block. Not referenced if ICOMPQ = 0.'), ('GIVPTR', 'GIVPTR is INTEGER\nhe number of Givens rotations which took place in this\nubproblem. Not referenced if ICOMPQ = 0.'), ('GIVCOL', 'GIVCOL is INTEGER array, dimension ( LDGCOL, 2 )\nach pair of numbers indicates a pair of columns to take place\nn a Givens rotation. Not referenced if ICOMPQ = 0.'), ('LDGCOL', 'LDGCOL is INTEGER\nhe leading dimension of GIVCOL, must be at least N.'), ('GIVNUM', 'GIVNUM is DOUBLE PRECISION array, dimension ( LDGNUM, 2 )\nach number indicates the C or S value to be used in the\norresponding Givens rotation. Not referenced if ICOMPQ = 0.'), ('LDGNUM', 'LDGNUM is INTEGER\nhe leading dimension of GIVNUM, must be at least N.'), ('C', 'C is DOUBLE PRECISION\n contains garbage if SQRE =0 and the C-value of a Givens\notation related to the right null space if SQRE = 1.'), ('S', 'S is DOUBLE PRECISION\n contains garbage if SQRE =0 and the S-value of a Givens\notation related to the right null space if SQRE = 1.'), ('INFO', 'INFO is INTEGER\n 0:  successful exit.\n 0:  if INFO = -i, the i-th argument had an illegal value.'))
