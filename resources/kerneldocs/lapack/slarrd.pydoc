(('slarrd', 'SLARRD computes the eigenvalues of a symmetric tridiagonal\nmatrix T to suitable accuracy. This is an auxiliary code to be\ncalled from SSTEMR.\nThe user may ask for all eigenvalues, all eigenvalues\nin the half-open interval (VL, VU], or the IL-th through IU-th\neigenvalues.\n\nTo avoid overflow, the matrix must be scaled so that its\nlargest element is no greater than overflow**(1/2) * underflow**(1/4) in absolute value, and for greatest\naccuracy, it should not be much smaller than that.\n\nSee W. Kahan "Accurate Eigenvalues of a Symmetric Tridiagonal\nMatrix", Report CS41, Computer Science Dept., Stanford\nUniversity, July 21, 1966.'), ('RANGE', 'RANGE is CHARACTER*1\n= \'A\': ("All")   all eigenvalues will be found.\n= \'V\': ("Value") all eigenvalues in the half-open interval\n                 (VL, VU] will be found.\n= \'I\': ("Index") the IL-th through IU-th eigenvalues (of the\n                 entire matrix) will be found.'), ('ORDER', 'ORDER is CHARACTER*1\n= \'B\': ("By Block") the eigenvalues will be grouped by\n                    split-off block (see IBLOCK, ISPLIT) and\n                    ordered from smallest to largest within\n                    the block.\n= \'E\': ("Entire matrix")\n                    the eigenvalues for the entire matrix\n                    will be ordered from smallest to\n                    largest.'), ('N', 'N is INTEGER\nThe order of the tridiagonal matrix T.  N >= 0.'), ('VL', 'VL is REAL'), ('VU', "VU is REAL\nIf RANGE='V', the lower and upper bounds of the interval to\nbe searched for eigenvalues.  Eigenvalues less than or equal\nto VL, or greater than VU, will not be returned.  VL < VU.\nNot referenced if RANGE = 'A' or 'I'."), ('IL', 'IL is INTEGER'), ('IU', "IU is INTEGER\nIf RANGE='I', the indices (in ascending order) of the\nsmallest and largest eigenvalues to be returned.\n1 <= IL <= IU <= N, if N > 0; IL = 1 and IU = 0 if N = 0.\nNot referenced if RANGE = 'A' or 'V'."), ('GERS', 'GERS is REAL array, dimension (2*N)\nThe N Gerschgorin intervals (the i-th Gerschgorin interval\nis (GERS(2*i-1), GERS(2*i)).'), ('RELTOL', 'RELTOL is REAL\nThe minimum relative width of an interval.  When an interval\nis narrower than RELTOL times the larger (in\nmagnitude) endpoint, then it is considered to be\nsufficiently small, i.e., converged.  Note: this should\nalways be at least radix*machine epsilon.'), ('D', 'D is REAL array, dimension (N)\nThe n diagonal elements of the tridiagonal matrix T.'), ('E', 'E is REAL array, dimension (N-1)\nThe (n-1) off-diagonal elements of the tridiagonal matrix T.'), ('E2', 'E2 is REAL array, dimension (N-1)\nThe (n-1) squared off-diagonal elements of the tridiagonal matrix T.'), ('PIVMIN', 'PIVMIN is REAL\nThe minimum pivot allowed in the Sturm sequence for T.'), ('NSPLIT', 'NSPLIT is INTEGER\nThe number of diagonal blocks in the matrix T.\n1 <= NSPLIT <= N.'), ('ISPLIT', 'ISPLIT is INTEGER array, dimension (N)\nThe splitting points, at which T breaks up into submatrices.\nThe first submatrix consists of rows/columns 1 to ISPLIT(1),\nthe second of rows/columns ISPLIT(1)+1 through ISPLIT(2),\netc., and the NSPLIT-th consists of rows/columns\nISPLIT(NSPLIT-1)+1 through ISPLIT(NSPLIT)=N.\n(Only the first NSPLIT elements will actually be used, but\nsince the user cannot know a priori what value NSPLIT will\nhave, N words must be reserved for ISPLIT.)'), ('M', 'M is INTEGER\nThe actual number of eigenvalues found. 0 <= M <= N.\n(See also the description of INFO=2,3.)'), ('W', 'W is REAL array, dimension (N)\nOn exit, the first M elements of W will contain the\neigenvalue approximations. SLARRD computes an interval\nI_j = (a_j, b_j] that includes eigenvalue j. The eigenvalue\napproximation is given as the interval midpoint\nW(j)= ( a_j + b_j)/2. The corresponding error is bounded by\nWERR(j) = abs( a_j - b_j)/2'), ('WERR', 'WERR is REAL array, dimension (N)\nThe error bound on the corresponding eigenvalue approximation\nin W.'), ('WL', 'WL is REAL'), ('WU', "WU is REAL\nThe interval (WL, WU] contains all the wanted eigenvalues.\nIf RANGE='V', then WL=VL and WU=VU.\nIf RANGE='A', then WL and WU are the global Gerschgorin bounds\n              on the spectrum.\nIf RANGE='I', then WL and WU are computed by SLAEBZ from the\n              index range specified."), ('IBLOCK', 'IBLOCK is INTEGER array, dimension (N)\nAt each row/column j where E(j) is zero or small, the\nmatrix T is considered to split into a block diagonal\nmatrix.  On exit, if INFO = 0, IBLOCK(i) specifies to which\nblock (from 1 to the number of blocks) the eigenvalue W(i)\nbelongs.  (SLARRD may use the remaining N-M elements as\nworkspace.)'), ('INDEXW', 'INDEXW is INTEGER array, dimension (N)\nThe indices of the eigenvalues within each block (submatrix);\nfor example, INDEXW(i)= j and IBLOCK(i)=k imply that the\ni-th eigenvalue W(i) is the j-th eigenvalue in block k.'), ('WORK', 'WORK is REAL array, dimension (4*N)'), ('IWORK', 'IWORK is INTEGER array, dimension (3*N)'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  some or all of the eigenvalues failed to converge or\n      were not computed:\n      =1 or 3: Bisection failed to converge for some\n              eigenvalues; these eigenvalues are flagged by a\n              negative block number.  The effect is that the\n              eigenvalues may not be as accurate as the\n              absolute and relative tolerances.  This is\n              generally caused by unexpectedly inaccurate\n              arithmetic.\n      =2 or 3: RANGE=\'I\' only: Not all of the eigenvalues\n              IL:IU were found.\n              Effect: M < IU+1-IL\n              Cause:  non-monotonic arithmetic, causing the\n                      Sturm sequence to be non-monotonic.\n              Cure:   recalculate, using RANGE=\'A\', and pick\n                      out eigenvalues IL:IU.  In some cases,\n                      increasing the PARAMETER "FUDGE" may\n                      make things work.\n      = 4:    RANGE=\'I\', and the Gershgorin interval\n              initially used was too small.  No eigenvalues\n              were computed.\n              Probable cause: your machine has sloppy\n                              floating-point arithmetic.\n              Cure: Increase the PARAMETER "FUDGE",\n                    recompile, and try again.'))
