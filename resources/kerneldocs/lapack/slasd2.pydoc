(('slasd2', 'SLASD2 merges the two sets of singular values together into a single\nsorted set.  Then it tries to deflate the size of the problem.\nThere are two ways in which deflation can occur:  when two or more\nsingular values are close together or if there is a tiny entry in the\nZ vector.  For each such occurrence the order of the related secular\nequation problem is reduced by one.\n\nSLASD2 is called from SLASD1.'), ('NL', 'NL is INTEGER\nhe row dimension of the upper block.  NL >= 1.'), ('NR', 'NR is INTEGER\nhe row dimension of the lower block.  NR >= 1.'), ('SQRE', 'SQRE is INTEGER\n 0: the lower block is an NR-by-NR square matrix.\n 1: the lower block is an NR-by-(NR+1) rectangular matrix.\n\nhe bidiagonal matrix has N = NL + NR + 1 rows and\n = N + SQRE >= N columns.'), ('K', 'K is INTEGER\nontains the dimension of the non-deflated matrix,\nhis is the order of the related secular equation. 1 <= K <=N.'), ('D', 'D is REAL array, dimension (N)\nn entry D contains the singular values of the two submatrices\no be combined.  On exit D contains the trailing (N-K) updated\ningular values (those which were deflated) sorted into\nncreasing order.'), ('Z', 'Z is REAL array, dimension (N)\nn exit Z contains the updating row vector in the secular\nquation.'), ('ALPHA', 'ALPHA is REAL\nontains the diagonal element associated with the added row.'), ('BETA', 'BETA is REAL\nontains the off-diagonal element associated with the added\now.'), ('U', 'U is REAL array, dimension (LDU,N)\nn entry U contains the left singular vectors of two\nubmatrices in the two square blocks with corners at (1,1),\nNL, NL), and (NL+2, NL+2), (N,N).\nn exit U contains the trailing (N-K) updated left singular\nectors (those which were deflated) in its last N-K columns.'), ('LDU', 'LDU is INTEGER\nhe leading dimension of the array U.  LDU >= N.'), ('VT', 'VT is REAL array, dimension (LDVT,M)\nn entry VT**T contains the right singular vectors of two\nubmatrices in the two square blocks with corners at (1,1),\nNL+1, NL+1), and (NL+2, NL+2), (M,M).\nn exit VT**T contains the trailing (N-K) updated right singular\nectors (those which were deflated) in its last N-K columns.\nn case SQRE =1, the last row of VT spans the right null\npace.'), ('LDVT', 'LDVT is INTEGER\nhe leading dimension of the array VT.  LDVT >= M.'), ('DSIGMA', 'DSIGMA is REAL array, dimension (N)\nontains a copy of the diagonal elements (K-1 singular values\nnd one zero) in the secular equation.'), ('U2', 'U2 is REAL array, dimension (LDU2,N)\nontains a copy of the first K-1 left singular vectors which\nill be used by SLASD3 in a matrix multiply (SGEMM) to solve\nor the new left singular vectors. U2 is arranged into four\nlocks. The first block contains a column with 1 at NL+1 and\nero everywhere else; the second block contains non-zero\nntries only at and above NL; the third contains non-zero\nntries only below NL+1; and the fourth is dense.'), ('LDU2', 'LDU2 is INTEGER\nhe leading dimension of the array U2.  LDU2 >= N.'), ('VT2', 'VT2 is REAL array, dimension (LDVT2,N)\nT2**T contains a copy of the first K right singular vectors\nhich will be used by SLASD3 in a matrix multiply (SGEMM) to\nolve for the new right singular vectors. VT2 is arranged into\nhree blocks. The first block contains a row that corresponds\no the special 0 diagonal element in SIGMA; the second block\nontains non-zeros only at and before NL +1; the third block\nontains non-zeros only at and after  NL +2.'), ('LDVT2', 'LDVT2 is INTEGER\nhe leading dimension of the array VT2.  LDVT2 >= M.'), ('IDXP', 'IDXP is INTEGER array, dimension (N)\nhis will contain the permutation used to place deflated\nalues of D at the end of the array. On output IDXP(2:K)\noints to the nondeflated D-values and IDXP(K+1:N)\noints to the deflated singular values.'), ('IDX', 'IDX is INTEGER array, dimension (N)\nhis will contain the permutation used to sort the contents of\n into ascending order.'), ('IDXC', 'IDXC is INTEGER array, dimension (N)\nhis will contain the permutation used to arrange the columns\nf the deflated U matrix into three groups:  the first group\nontains non-zero entries only at and above NL, the second\nontains non-zero entries only below NL+2, and the third is\nense.'), ('IDXQ', 'IDXQ is INTEGER array, dimension (N)\nhis contains the permutation which separately sorts the two\nub-problems in D into ascending order.  Note that entries in\nhe first hlaf of this permutation must first be moved one\nosition backward; and entries in the second half\nust first have NL+1 added to their values.'), ('COLTYP', 'COLTYP is INTEGER array, dimension (N)\ns workspace, this will contain a label which will indicate\nhich of the following types a column in the U2 matrix or a\now in the VT2 matrix is:\n : non-zero in the upper half only\n : non-zero in the lower half only\n : dense\n : deflated\n\nn exit, it is an array of dimension 4, with COLTYP(I) being\nhe dimension of the I-th type columns.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit.\n< 0:  if INFO = -i, the i-th argument had an illegal value.'))
