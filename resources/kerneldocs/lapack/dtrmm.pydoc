(('dtrmm', 'DTRMM  performs one of the matrix-matrix operations\n\n   B := alpha*op( A )*B,   or   B := alpha*B*op( A ),\n\nwhere  alpha  is a scalar,  B  is an m by n matrix,  A  is a unit, or\nnon-unit,  upper or lower triangular matrix  and  op( A )  is one  of\n\n   op( A ) = A   or   op( A ) = A**T.'), ('SIDE', "SIDE is CHARACTER*1\n On entry,  SIDE specifies whether  op( A ) multiplies B from\n the left or right as follows:\n\n    SIDE = 'L' or 'l'   B := alpha*op( A )*B.\n\n    SIDE = 'R' or 'r'   B := alpha*B*op( A )."), ('UPLO', "UPLO is CHARACTER*1\n On entry, UPLO specifies whether the matrix A is an upper or\n lower triangular matrix as follows:\n\n    UPLO = 'U' or 'u'   A is an upper triangular matrix.\n\n    UPLO = 'L' or 'l'   A is a lower triangular matrix."), ('TRANSA', "TRANSA is CHARACTER*1\n On entry, TRANSA specifies the form of op( A ) to be used in\n the matrix multiplication as follows:\n\n    TRANSA = 'N' or 'n'   op( A ) = A.\n\n    TRANSA = 'T' or 't'   op( A ) = A**T.\n\n    TRANSA = 'C' or 'c'   op( A ) = A**T."), ('DIAG', "DIAG is CHARACTER*1\n On entry, DIAG specifies whether or not A is unit triangular\n as follows:\n\n    DIAG = 'U' or 'u'   A is assumed to be unit triangular.\n\n    DIAG = 'N' or 'n'   A is not assumed to be unit\n                        triangular."), ('M', 'M is INTEGER\n On entry, M specifies the number of rows of B. M must be at\n least zero.'), ('N', 'N is INTEGER\n On entry, N specifies the number of columns of B.  N must be\n at least zero.'), ('ALPHA', 'ALPHA is DOUBLE PRECISION.\n On entry,  ALPHA specifies the scalar  alpha. When  alpha is\n zero then  A is not referenced and  B need not be set before\n entry.'), ('A', "A is DOUBLE PRECISION array of DIMENSION ( LDA, k ), where k is m\nwhen  SIDE = 'L' or 'l'  and is  n  when  SIDE = 'R' or 'r'.\nBefore entry  with  UPLO = 'U' or 'u',  the  leading  k by k\nupper triangular part of the array  A must contain the upper\ntriangular matrix  and the strictly lower triangular part of\nA is not referenced.\nBefore entry  with  UPLO = 'L' or 'l',  the  leading  k by k\nlower triangular part of the array  A must contain the lower\ntriangular matrix  and the strictly upper triangular part of\nA is not referenced.\nNote that when  DIAG = 'U' or 'u',  the diagonal elements of\nA  are not referenced either,  but are assumed to be  unity."), ('LDA', "LDA is INTEGER\n On entry, LDA specifies the first dimension of A as declared\n in the calling (sub) program.  When  SIDE = 'L' or 'l'  then\n LDA  must be at least  max( 1, m ),  when  SIDE = 'R' or 'r'\n then LDA must be at least max( 1, n )."), ('B', 'B is DOUBLE PRECISION array of DIMENSION ( LDB, n ).\n Before entry,  the leading  m by n part of the array  B must\n contain the matrix  B,  and  on exit  is overwritten  by the\n transformed matrix.'), ('LDB', 'LDB is INTEGER\n On entry, LDB specifies the first dimension of B as declared\n in  the  calling  (sub)  program.   LDB  must  be  at  least\n max( 1, m ).'))
