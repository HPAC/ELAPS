(('dlar1v', 'DLAR1V computes the (scaled) r-th column of the inverse of\nthe sumbmatrix in rows B1 through BN of the tridiagonal matrix\nL D L**T - sigma I. When sigma is close to an eigenvalue, the\ncomputed vector is an accurate eigenvector. Usually, r corresponds\nto the index where the eigenvector is largest in magnitude.\nThe following steps accomplish this computation :\n(a) Stationary qd transform,  L D L**T - sigma I = L(+) D(+) L(+)**T,\n(b) Progressive qd transform, L D L**T - sigma I = U(-) D(-) U(-)**T,\n(c) Computation of the diagonal elements of the inverse of\n    L D L**T - sigma I by combining the above transforms, and choosing\n    r as the index where the diagonal of the inverse is (one of the)\n    largest in magnitude.\n(d) Computation of the (scaled) r-th column of the inverse using the\n    twisted factorization obtained by combining the top part of the\n    the stationary and the bottom part of the progressive transform.'), ('N', 'N is INTEGER\n The order of the matrix L D L**T.'), ('B1', 'B1 is INTEGER\n First index of the submatrix of L D L**T.'), ('BN', 'BN is INTEGER\n Last index of the submatrix of L D L**T.'), ('LAMBDA', 'LAMBDA is DOUBLE PRECISION\n The shift. In order to compute an accurate eigenvector,\n LAMBDA should be a good approximation to an eigenvalue\n of L D L**T.'), ('L', 'L is DOUBLE PRECISION array, dimension (N-1)\n The (n-1) subdiagonal elements of the unit bidiagonal matrix\n L, in elements 1 to N-1.'), ('D', 'D is DOUBLE PRECISION array, dimension (N)\n The n diagonal elements of the diagonal matrix D.'), ('LD', 'LD is DOUBLE PRECISION array, dimension (N-1)\n The n-1 elements L(i)*D(i).'), ('LLD', 'LLD is DOUBLE PRECISION array, dimension (N-1)\n The n-1 elements L(i)*L(i)*D(i).'), ('PIVMIN', 'PIVMIN is DOUBLE PRECISION\n The minimum pivot in the Sturm sequence.'), ('GAPTOL', 'GAPTOL is DOUBLE PRECISION\n Tolerance that indicates when eigenvector entries are negligible\n w.r.t. their contribution to the residual.'), ('Z', 'Z is DOUBLE PRECISION array, dimension (N)\n On input, all entries of Z must be set to 0.\n On output, Z contains the (scaled) r-th column of the\n inverse. The scaling is such that Z(R) equals 1.'), ('WANTNC', 'WANTNC is LOGICAL\n Specifies whether NEGCNT has to be computed.'), ('NEGCNT', 'NEGCNT is INTEGER\n If WANTNC is .TRUE. then NEGCNT = the number of pivots < pivmin\n in the  matrix factorization L D L**T, and NEGCNT = -1 otherwise.'), ('ZTZ', 'ZTZ is DOUBLE PRECISION\n The square of the 2-norm of Z.'), ('MINGMA', 'MINGMA is DOUBLE PRECISION\n The reciprocal of the largest (in magnitude) diagonal\n element of the inverse of L D L**T - sigma I.'), ('R', 'R is INTEGER\n The twist index for the twisted factorization used to\n compute Z.\n On input, 0 <= R <= N. If R is input as 0, R is set to\n the index where (L D L**T - sigma I)^{-1} is largest\n in magnitude. If 1 <= R <= N, R is unchanged.\n On output, R contains the twist index used to compute Z.\n Ideally, R designates the position of the maximum entry in the\n eigenvector.'), ('ISUPPZ', 'ISUPPZ is INTEGER array, dimension (2)\n The support of the vector in Z, i.e., the vector Z is\n nonzero only in elements ISUPPZ(1) through ISUPPZ( 2 ).'), ('NRMINV', 'NRMINV is DOUBLE PRECISION\n NRMINV = 1/SQRT( ZTZ )'), ('RESID', 'RESID is DOUBLE PRECISION\n The residual of the FP vector.\n RESID = ABS( MINGMA )/SQRT( ZTZ )'), ('RQCORR', 'RQCORR is DOUBLE PRECISION\n The Rayleigh Quotient correction to LAMBDA.\n RQCORR = MINGMA*TMP'), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (4*N)'))
