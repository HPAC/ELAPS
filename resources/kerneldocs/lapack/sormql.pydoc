(('sormql', "SORMQL overwrites the general real M-by-N matrix C with\n\n                SIDE = 'L'     SIDE = 'R'\nTRANS = 'N':      Q * C          C * Q\nTRANS = 'T':      Q**T * C       C * Q**T\n\nwhere Q is a real orthogonal matrix defined as the product of k\nelementary reflectors\n\n      Q = H(k) . . . H(2) H(1)\n\nas returned by SGEQLF. Q is of order M if SIDE = 'L' and of order N\nif SIDE = 'R'."), ('SIDE', "SIDE is CHARACTER*1\n= 'L': apply Q or Q**T from the Left;\n= 'R': apply Q or Q**T from the Right."), ('TRANS', "TRANS is CHARACTER*1\n= 'N':  No transpose, apply Q;\n= 'T':  Transpose, apply Q**T."), ('M', 'M is INTEGER\nThe number of rows of the matrix C. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix C. N >= 0.'), ('K', "K is INTEGER\nThe number of elementary reflectors whose product defines\nthe matrix Q.\nIf SIDE = 'L', M >= K >= 0;\nif SIDE = 'R', N >= K >= 0."), ('A', 'A is REAL array, dimension (LDA,K)\nThe i-th column must contain the vector which defines the\nelementary reflector H(i), for i = 1,2,...,k, as returned by\nSGEQLF in the last k columns of its array argument A.'), ('LDA', "LDA is INTEGER\nThe leading dimension of the array A.\nIf SIDE = 'L', LDA >= max(1,M);\nif SIDE = 'R', LDA >= max(1,N)."), ('TAU', 'TAU is REAL array, dimension (K)\nTAU(i) must contain the scalar factor of the elementary\nreflector H(i), as returned by SGEQLF.'), ('C', 'C is REAL array, dimension (LDC,N)\nOn entry, the M-by-N matrix C.\nOn exit, C is overwritten by Q*C or Q**T*C or C*Q**T or C*Q.'), ('LDC', 'LDC is INTEGER\nThe leading dimension of the array C. LDC >= max(1,M).'), ('WORK', 'WORK is REAL array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', "LWORK is INTEGER\nThe dimension of the array WORK.\nIf SIDE = 'L', LWORK >= max(1,N);\nif SIDE = 'R', LWORK >= max(1,M).\nFor optimum performance LWORK >= N*NB if SIDE = 'L', and\nLWORK >= M*NB if SIDE = 'R', where NB is the optimal\nblocksize.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA."), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value'))
