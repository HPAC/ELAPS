(('stgsyl', "STGSYL solves the generalized Sylvester equation:\n\n            A * R - L * B = scale * C                 (1)\n            D * R - L * E = scale * F\n\nwhere R and L are unknown m-by-n matrices, (A, D), (B, E) and\n(C, F) are given matrix pairs of size m-by-m, n-by-n and m-by-n,\nrespectively, with real entries. (A, D) and (B, E) must be in\ngeneralized (real) Schur canonical form, i.e. A, B are upper quasi\ntriangular and D, E are upper triangular.\n\nThe solution (R, L) overwrites (C, F). 0 <= SCALE <= 1 is an output\nscaling factor chosen to avoid overflow.\n\nIn matrix notation (1) is equivalent to solve  Zx = scale b, where\nZ is defined as\n\n           Z = [ kron(In, A)  -kron(B**T, Im) ]         (2)\n               [ kron(In, D)  -kron(E**T, Im) ].\n\nHere Ik is the identity matrix of size k and X**T is the transpose of\nX. kron(X, Y) is the Kronecker product between the matrices X and Y.\n\nIf TRANS = 'T', STGSYL solves the transposed system Z**T*y = scale*b,\nwhich is equivalent to solve for R and L in\n\n            A**T * R + D**T * L = scale * C           (3)\n            R * B**T + L * E**T = scale * -F\n\nThis case (TRANS = 'T') is used to compute an one-norm-based estimate\nof Dif[(A,D), (B,E)], the separation between the matrix pairs (A,D)\nand (B,E), using SLACON.\n\nIf IJOB >= 1, STGSYL computes a Frobenius norm-based estimate\nof Dif[(A,D),(B,E)]. That is, the reciprocal of a lower bound on the\nreciprocal of the smallest singular value of Z. See [1-2] for more\ninformation.\n\nThis is a level 3 BLAS algorithm."), ('TRANS', "TRANS is CHARACTER*1\n= 'N', solve the generalized Sylvester equation (1).\n= 'T', solve the 'transposed' system (3)."), ('IJOB', "IJOB is INTEGER\nSpecifies what kind of functionality to be performed.\n =0: solve (1) only.\n =1: The functionality of 0 and 3.\n =2: The functionality of 0 and 4.\n =3: Only an estimate of Dif[(A,D), (B,E)] is computed.\n     (look ahead strategy IJOB  = 1 is used).\n =4: Only an estimate of Dif[(A,D), (B,E)] is computed.\n     ( SGECON on sub-systems is used ).\nNot referenced if TRANS = 'T'."), ('M', 'M is INTEGER\nThe order of the matrices A and D, and the row dimension of\nthe matrices C, F, R and L.'), ('N', 'N is INTEGER\nThe order of the matrices B and E, and the column dimension\nof the matrices C, F, R and L.'), ('A', 'A is REAL array, dimension (LDA, M)\nThe upper quasi triangular matrix A.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1, M).'), ('B', 'B is REAL array, dimension (LDB, N)\nThe upper quasi triangular matrix B.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B. LDB >= max(1, N).'), ('C', "C is REAL array, dimension (LDC, N)\nOn entry, C contains the right-hand-side of the first matrix\nequation in (1) or (3).\nOn exit, if IJOB = 0, 1 or 2, C has been overwritten by\nthe solution R. If IJOB = 3 or 4 and TRANS = 'N', C holds R,\nthe solution achieved during the computation of the\nDif-estimate."), ('LDC', 'LDC is INTEGER\nThe leading dimension of the array C. LDC >= max(1, M).'), ('D', 'D is REAL array, dimension (LDD, M)\nThe upper triangular matrix D.'), ('LDD', 'LDD is INTEGER\nThe leading dimension of the array D. LDD >= max(1, M).'), ('E', 'E is REAL array, dimension (LDE, N)\nThe upper triangular matrix E.'), ('LDE', 'LDE is INTEGER\nThe leading dimension of the array E. LDE >= max(1, N).'), ('F', "F is REAL array, dimension (LDF, N)\nOn entry, F contains the right-hand-side of the second matrix\nequation in (1) or (3).\nOn exit, if IJOB = 0, 1 or 2, F has been overwritten by\nthe solution L. If IJOB = 3 or 4 and TRANS = 'N', F holds L,\nthe solution achieved during the computation of the\nDif-estimate."), ('LDF', 'LDF is INTEGER\nThe leading dimension of the array F. LDF >= max(1, M).'), ('DIF', "DIF is REAL\nOn exit DIF is the reciprocal of a lower bound of the\nreciprocal of the Dif-function, i.e. DIF is an upper bound of\nDif[(A,D), (B,E)] = sigma_min(Z), where Z as in (2).\nIF IJOB = 0 or TRANS = 'T', DIF is not touched."), ('SCALE', 'SCALE is REAL\nOn exit SCALE is the scaling factor in (1) or (3).\nIf 0 < SCALE < 1, C and F hold the solutions R and L, resp.,\nto a slightly perturbed system but the input matrices A, B, D\nand E have not been changed. If SCALE = 0, C and F hold the\nsolutions R and L, respectively, to the homogeneous system\nwith C = F = 0. Normally, SCALE = 1.'), ('WORK', 'WORK is REAL array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', "LWORK is INTEGER\nThe dimension of the array WORK. LWORK > = 1.\nIf IJOB = 1 or 2 and TRANS = 'N', LWORK >= max(1,2*M*N).\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA."), ('IWORK', 'IWORK is INTEGER array, dimension (M+N+6)'), ('INFO', 'INFO is INTEGER\n  =0: successful exit\n  <0: If INFO = -i, the i-th argument had an illegal value.\n  >0: (A, D) and (B, E) have common or close eigenvalues.'))
