(('dlagts', 'DLAGTS may be used to solve one of the systems of equations\n\n   (T - lambda*I)*x = y   or   (T - lambda*I)**T*x = y,\n\nwhere T is an n by n tridiagonal matrix, for x, following the\nfactorization of (T - lambda*I) as\n\n   (T - lambda*I) = P*L*U ,\n\nby routine DLAGTF. The choice of equation to be solved is\ncontrolled by the argument JOB, and in each case there is an option\nto perturb zero or very small diagonal elements of U, this option\nbeing intended for use in applications such as inverse iteration.'), ('JOB', 'JOB is INTEGER\nSpecifies the job to be performed by DLAGTS as follows:\n=  1: The equations  (T - lambda*I)x = y  are to be solved,\n      but diagonal elements of U are not to be perturbed.\n= -1: The equations  (T - lambda*I)x = y  are to be solved\n      and, if overflow would otherwise occur, the diagonal\n      elements of U are to be perturbed. See argument TOL\n      below.\n=  2: The equations  (T - lambda*I)**Tx = y  are to be solved,\n      but diagonal elements of U are not to be perturbed.\n= -2: The equations  (T - lambda*I)**Tx = y  are to be solved\n      and, if overflow would otherwise occur, the diagonal\n      elements of U are to be perturbed. See argument TOL\n      below.'), ('N', 'N is INTEGER\nThe order of the matrix T.'), ('A', 'A is DOUBLE PRECISION array, dimension (N)\nOn entry, A must contain the diagonal elements of U as\nreturned from DLAGTF.'), ('B', 'B is DOUBLE PRECISION array, dimension (N-1)\nOn entry, B must contain the first super-diagonal elements of\nU as returned from DLAGTF.'), ('C', 'C is DOUBLE PRECISION array, dimension (N-1)\nOn entry, C must contain the sub-diagonal elements of L as\nreturned from DLAGTF.'), ('D', 'D is DOUBLE PRECISION array, dimension (N-2)\nOn entry, D must contain the second super-diagonal elements\nof U as returned from DLAGTF.'), ('IN', 'IN is INTEGER array, dimension (N)\nOn entry, IN must contain details of the matrix P as returned\nfrom DLAGTF.'), ('Y', 'Y is DOUBLE PRECISION array, dimension (N)\nOn entry, the right hand side vector y.\nOn exit, Y is overwritten by the solution vector x.'), ('TOL', 'TOL is DOUBLE PRECISION\nOn entry, with  JOB .lt. 0, TOL should be the minimum\nperturbation to be made to very small diagonal elements of U.\nTOL should normally be chosen as about eps*norm(U), where eps\nis the relative machine precision, but if TOL is supplied as\nnon-positive, then it is reset to eps*max( abs( u(i,j) ) ).\nIf  JOB .gt. 0  then TOL is not referenced.\n\nOn exit, TOL is changed as described above, only if TOL is\nnon-positive on entry. Otherwise TOL is unchanged.'), ('INFO', 'INFO is INTEGER\n= 0   : successful exit\n.lt. 0: if INFO = -i, the i-th argument had an illegal value\n.gt. 0: overflow would occur when computing the INFO(th)\n        element of the solution vector x. This can only occur\n        when JOB is supplied as positive and either means\n        that a diagonal element of U is very small, or that\n        the elements of the right-hand side vector y are very\n        large.'))
