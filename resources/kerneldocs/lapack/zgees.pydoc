(('zgees', 'ZGEES computes for an N-by-N complex nonsymmetric matrix A, the\neigenvalues, the Schur form T, and, optionally, the matrix of Schur\nvectors Z.  This gives the Schur factorization A = Z*T*(Z**H).\n\nOptionally, it also orders the eigenvalues on the diagonal of the\nSchur form so that selected eigenvalues are at the top left.\nThe leading columns of Z then form an orthonormal basis for the\ninvariant subspace corresponding to the selected eigenvalues.\n\nA complex matrix is in Schur form if it is upper triangular.'), ('JOBVS', "JOBVS is CHARACTER*1\n= 'N': Schur vectors are not computed;\n= 'V': Schur vectors are computed."), ('SORT', "SORT is CHARACTER*1\nSpecifies whether or not to order the eigenvalues on the\ndiagonal of the Schur form.\n= 'N': Eigenvalues are not ordered:\n= 'S': Eigenvalues are ordered (see SELECT)."), ('SELECT', "SELECT is a LOGICAL FUNCTION of one COMPLEX*16 argument\nSELECT must be declared EXTERNAL in the calling subroutine.\nIf SORT = 'S', SELECT is used to select eigenvalues to order\nto the top left of the Schur form.\nIF SORT = 'N', SELECT is not referenced.\nThe eigenvalue W(j) is selected if SELECT(W(j)) is true."), ('N', 'N is INTEGER\nThe order of the matrix A. N >= 0.'), ('A', 'A is COMPLEX*16 array, dimension (LDA,N)\nOn entry, the N-by-N matrix A.\nOn exit, A has been overwritten by its Schur form T.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('SDIM', "SDIM is INTEGER\nIf SORT = 'N', SDIM = 0.\nIf SORT = 'S', SDIM = number of eigenvalues for which\n               SELECT is true."), ('W', 'W is COMPLEX*16 array, dimension (N)\nW contains the computed eigenvalues, in the same order that\nthey appear on the diagonal of the output Schur form T.'), ('VS', "VS is COMPLEX*16 array, dimension (LDVS,N)\nIf JOBVS = 'V', VS contains the unitary matrix Z of Schur\nvectors.\nIf JOBVS = 'N', VS is not referenced."), ('LDVS', "LDVS is INTEGER\nThe leading dimension of the array VS.  LDVS >= 1; if\nJOBVS = 'V', LDVS >= N."), ('WORK', 'WORK is COMPLEX*16 array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK.  LWORK >= max(1,2*N).\nFor good performance, LWORK must generally be larger.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('RWORK', 'RWORK is DOUBLE PRECISION array, dimension (N)'), ('BWORK', "BWORK is LOGICAL array, dimension (N)\nNot referenced if SORT = 'N'."), ('INFO', "INFO is INTEGER\n= 0: successful exit\n< 0: if INFO = -i, the i-th argument had an illegal value.\n> 0: if INFO = i, and i is\n     <= N:  the QR algorithm failed to compute all the\n            eigenvalues; elements 1:ILO-1 and i+1:N of W\n            contain those eigenvalues which have converged;\n            if JOBVS = 'V', VS contains the matrix which\n            reduces A to its partially converged Schur form.\n     = N+1: the eigenvalues could not be reordered because\n            some eigenvalues were too close to separate (the\n            problem is very ill-conditioned);\n     = N+2: after reordering, roundoff changed values of\n            some complex eigenvalues so that leading\n            eigenvalues in the Schur form no longer satisfy\n            SELECT = .TRUE..  This could also be caused by\n            underflow due to scaling."))
