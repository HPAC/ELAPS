(('sorm2l', "SORM2L overwrites the general real m by n matrix C with\n\n      Q * C  if SIDE = 'L' and TRANS = 'N', or\n\n      Q**T * C  if SIDE = 'L' and TRANS = 'T', or\n\n      C * Q  if SIDE = 'R' and TRANS = 'N', or\n\n      C * Q**T if SIDE = 'R' and TRANS = 'T',\n\nwhere Q is a real orthogonal matrix defined as the product of k\nelementary reflectors\n\n      Q = H(k) . . . H(2) H(1)\n\nas returned by SGEQLF. Q is of order m if SIDE = 'L' and of order n\nif SIDE = 'R'."), ('SIDE', "SIDE is CHARACTER*1\n= 'L': apply Q or Q**T from the Left\n= 'R': apply Q or Q**T from the Right"), ('TRANS', "TRANS is CHARACTER*1\n= 'N': apply Q  (No transpose)\n= 'T': apply Q**T (Transpose)"), ('M', 'M is INTEGER\nThe number of rows of the matrix C. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix C. N >= 0.'), ('K', "K is INTEGER\nThe number of elementary reflectors whose product defines\nthe matrix Q.\nIf SIDE = 'L', M >= K >= 0;\nif SIDE = 'R', N >= K >= 0."), ('A', 'A is REAL array, dimension (LDA,K)\nThe i-th column must contain the vector which defines the\nelementary reflector H(i), for i = 1,2,...,k, as returned by\nSGEQLF in the last k columns of its array argument A.\nA is modified by the routine but restored on exit.'), ('LDA', "LDA is INTEGER\nThe leading dimension of the array A.\nIf SIDE = 'L', LDA >= max(1,M);\nif SIDE = 'R', LDA >= max(1,N)."), ('TAU', 'TAU is REAL array, dimension (K)\nTAU(i) must contain the scalar factor of the elementary\nreflector H(i), as returned by SGEQLF.'), ('C', 'C is REAL array, dimension (LDC,N)\nOn entry, the m by n matrix C.\nOn exit, C is overwritten by Q*C or Q**T*C or C*Q**T or C*Q.'), ('LDC', 'LDC is INTEGER\nThe leading dimension of the array C. LDC >= max(1,M).'), ('WORK', "WORK is REAL array, dimension\n                         (N) if SIDE = 'L',\n                         (M) if SIDE = 'R'"), ('INFO', 'INFO is INTEGER\n= 0: successful exit\n< 0: if INFO = -i, the i-th argument had an illegal value'))
