(('zlarrv', 'ZLARRV computes the eigenvectors of the tridiagonal matrix\nT = L D L**T given L, D and APPROXIMATIONS to the eigenvalues of L D L**T.\nThe input eigenvalues should have been computed by DLARRE.'), ('N', 'N is INTEGER\nThe order of the matrix.  N >= 0.'), ('VL', 'VL is DOUBLE PRECISION'), ('VU', 'VU is DOUBLE PRECISION\nLower and upper bounds of the interval that contains the desired\neigenvalues. VL < VU. Needed to compute gaps on the left or right\nend of the extremal eigenvalues in the desired RANGE.'), ('D', 'D is DOUBLE PRECISION array, dimension (N)\nOn entry, the N diagonal elements of the diagonal matrix D.\nOn exit, D may be overwritten.'), ('L', 'L is DOUBLE PRECISION array, dimension (N)\nOn entry, the (N-1) subdiagonal elements of the unit\nbidiagonal matrix L are in elements 1 to N-1 of L\n(if the matrix is not splitted.) At the end of each block\nis stored the corresponding shift as given by DLARRE.\nOn exit, L is overwritten.'), ('PIVMIN', 'PIVMIN is DOUBLE PRECISION\nThe minimum pivot allowed in the Sturm sequence.'), ('ISPLIT', 'ISPLIT is INTEGER array, dimension (N)\nThe splitting points, at which T breaks up into blocks.\nThe first block consists of rows/columns 1 to\nISPLIT( 1 ), the second of rows/columns ISPLIT( 1 )+1\nthrough ISPLIT( 2 ), etc.'), ('M', 'M is INTEGER\nThe total number of input eigenvalues.  0 <= M <= N.'), ('DOL', 'DOL is INTEGER'), ('DOU', 'DOU is INTEGER\nIf the user wants to compute only selected eigenvectors from all\nthe eigenvalues supplied, he can specify an index range DOL:DOU.\nOr else the setting DOL=1, DOU=M should be applied.\nNote that DOL and DOU refer to the order in which the eigenvalues\nare stored in W.\nIf the user wants to compute only selected eigenpairs, then\nthe columns DOL-1 to DOU+1 of the eigenvector space Z contain the\ncomputed eigenvectors. All other columns of Z are set to zero.'), ('MINRGP', 'MINRGP is DOUBLE PRECISION'), ('RTOL1', 'RTOL1 is DOUBLE PRECISION'), ('RTOL2', 'RTOL2 is DOUBLE PRECISION\n Parameters for bisection.\n An interval [LEFT,RIGHT] has converged if\n RIGHT-LEFT.LT.MAX( RTOL1*GAP, RTOL2*MAX(|LEFT|,|RIGHT|) )'), ('W', 'W is DOUBLE PRECISION array, dimension (N)\nThe first M elements of W contain the APPROXIMATE eigenvalues for\nwhich eigenvectors are to be computed.  The eigenvalues\nshould be grouped by split-off block and ordered from\nsmallest to largest within the block ( The output array\nW from DLARRE is expected here ). Furthermore, they are with\nrespect to the shift of the corresponding root representation\nfor their block. On exit, W holds the eigenvalues of the\nUNshifted matrix.'), ('WERR', 'WERR is DOUBLE PRECISION array, dimension (N)\nThe first M elements contain the semiwidth of the uncertainty\ninterval of the corresponding eigenvalue in W'), ('WGAP', 'WGAP is DOUBLE PRECISION array, dimension (N)\nThe separation from the right neighbor eigenvalue in W.'), ('IBLOCK', 'IBLOCK is INTEGER array, dimension (N)\nThe indices of the blocks (submatrices) associated with the\ncorresponding eigenvalues in W; IBLOCK(i)=1 if eigenvalue\nW(i) belongs to the first block from the top, =2 if W(i)\nbelongs to the second block, etc.'), ('INDEXW', 'INDEXW is INTEGER array, dimension (N)\nThe indices of the eigenvalues within each block (submatrix);\nfor example, INDEXW(i)= 10 and IBLOCK(i)=2 imply that the\ni-th eigenvalue W(i) is the 10-th eigenvalue in the second block.'), ('GERS', 'GERS is DOUBLE PRECISION array, dimension (2*N)\nThe N Gerschgorin intervals (the i-th Gerschgorin interval\nis (GERS(2*i-1), GERS(2*i)). The Gerschgorin intervals should\nbe computed from the original UNshifted matrix.'), ('Z', 'Z is COMPLEX*16 array, dimension (LDZ, max(1,M) )\nIf INFO = 0, the first M columns of Z contain the\northonormal eigenvectors of the matrix T\ncorresponding to the input eigenvalues, with the i-th\ncolumn of Z holding the eigenvector associated with W(i).\nNote: the user must ensure that at least max(1,M) columns are\nsupplied in the array Z.'), ('LDZ', "LDZ is INTEGER\nThe leading dimension of the array Z.  LDZ >= 1, and if\nJOBZ = 'V', LDZ >= max(1,N)."), ('ISUPPZ', 'ISUPPZ is INTEGER array, dimension ( 2*max(1,M) )\nThe support of the eigenvectors in Z, i.e., the indices\nindicating the nonzero elements in Z. The I-th eigenvector\nis nonzero only in elements ISUPPZ( 2*I-1 ) through\nISUPPZ( 2*I ).'), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (12*N)'), ('IWORK', 'IWORK is INTEGER array, dimension (7*N)'), ('INFO', "INFO is INTEGER\n= 0:  successful exit\n\n> 0:  A problem occured in ZLARRV.\n< 0:  One of the called subroutines signaled an internal problem.\n      Needs inspection of the corresponding parameter IINFO\n      for further information.\n\n=-1:  Problem in DLARRB when refining a child's eigenvalues.\n=-2:  Problem in DLARRF when computing the RRR of a child.\n      When a child is inside a tight cluster, it can be difficult\n      to find an RRR. A partial remedy from the user's point of\n      view is to make the parameter MINRGP smaller and recompile.\n      However, as the orthogonality of the computed vectors is\n      proportional to 1/MINRGP, the user should be aware that\n      he might be trading in precision when he decreases MINRGP.\n=-3:  Problem in DLARRB when refining a single eigenvalue\n      after the Rayleigh correction was rejected.\n= 5:  The Rayleigh Quotient Iteration failed to converge to\n      full accuracy in MAXITR steps."))
