(('sppequ', 'SPPEQU computes row and column scalings intended to equilibrate a\nsymmetric positive definite matrix A in packed storage and reduce\nits condition number (with respect to the two-norm).  S contains the\nscale factors, S(i)=1/sqrt(A(i,i)), chosen so that the scaled matrix\nB with elements B(i,j)=S(i)*A(i,j)*S(j) has ones on the diagonal.\nThis choice of S puts the condition number of B within a factor N of\nthe smallest possible condition number over all possible diagonal\nscalings.'), ('UPLO', "UPLO is CHARACTER*1\n= 'U':  Upper triangle of A is stored;\n= 'L':  Lower triangle of A is stored."), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('AP', "AP is REAL array, dimension (N*(N+1)/2)\nThe upper or lower triangle of the symmetric matrix A, packed\ncolumnwise in a linear array.  The j-th column of A is stored\nin the array AP as follows:\nif UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\nif UPLO = 'L', AP(i + (j-1)*(2n-j)/2) = A(i,j) for j<=i<=n."), ('S', 'S is REAL array, dimension (N)\nIf INFO = 0, S contains the scale factors for A.'), ('SCOND', 'SCOND is REAL\nIf INFO = 0, S contains the ratio of the smallest S(i) to\nthe largest S(i).  If SCOND >= 0.1 and AMAX is neither too\nlarge nor too small, it is not worth scaling by S.'), ('AMAX', 'AMAX is REAL\nAbsolute value of largest matrix element.  If AMAX is very\nclose to overflow or very close to underflow, the matrix\nshould be scaled.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = i, the i-th diagonal element is nonpositive.'))
