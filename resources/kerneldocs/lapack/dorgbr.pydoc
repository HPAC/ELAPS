(('dorgbr', "DORGBR generates one of the real orthogonal matrices Q or P**T\ndetermined by DGEBRD when reducing a real matrix A to bidiagonal\nform: A = Q * B * P**T.  Q and P**T are defined as products of\nelementary reflectors H(i) or G(i) respectively.\n\nIf VECT = 'Q', A is assumed to have been an M-by-K matrix, and Q\nis of order M:\nif m >= k, Q = H(1) H(2) . . . H(k) and DORGBR returns the first n\ncolumns of Q, where m >= n >= k;\nif m < k, Q = H(1) H(2) . . . H(m-1) and DORGBR returns Q as an\nM-by-M matrix.\n\nIf VECT = 'P', A is assumed to have been a K-by-N matrix, and P**T\nis of order N:\nif k < n, P**T = G(k) . . . G(2) G(1) and DORGBR returns the first m\nrows of P**T, where n >= m >= k;\nif k >= n, P**T = G(n-1) . . . G(2) G(1) and DORGBR returns P**T as\nan N-by-N matrix."), ('VECT', "VECT is CHARACTER*1\nSpecifies whether the matrix Q or the matrix P**T is\nrequired, as defined in the transformation applied by DGEBRD:\n= 'Q':  generate Q;\n= 'P':  generate P**T."), ('M', 'M is INTEGER\nThe number of rows of the matrix Q or P**T to be returned.\nM >= 0.'), ('N', "N is INTEGER\nThe number of columns of the matrix Q or P**T to be returned.\nN >= 0.\nIf VECT = 'Q', M >= N >= min(M,K);\nif VECT = 'P', N >= M >= min(N,K)."), ('K', "K is INTEGER\nIf VECT = 'Q', the number of columns in the original M-by-K\nmatrix reduced by DGEBRD.\nIf VECT = 'P', the number of rows in the original K-by-N\nmatrix reduced by DGEBRD.\nK >= 0."), ('A', 'A is DOUBLE PRECISION array, dimension (LDA,N)\nOn entry, the vectors which define the elementary reflectors,\nas returned by DGEBRD.\nOn exit, the M-by-N matrix Q or P**T.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1,M).'), ('TAU', "TAU is DOUBLE PRECISION array, dimension\n                      (min(M,K)) if VECT = 'Q'\n                      (min(N,K)) if VECT = 'P'\nTAU(i) must contain the scalar factor of the elementary\nreflector H(i) or G(i), which determines Q or P**T, as\nreturned by DGEBRD in its array argument TAUQ or TAUP."), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK. LWORK >= max(1,min(M,N)).\nFor optimum performance LWORK >= min(M,N)*NB, where NB\nis the optimal blocksize.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value'))
