(('zpstf2', "ZPSTF2 computes the Cholesky factorization with complete\npivoting of a complex Hermitian positive semidefinite matrix A.\n\nThe factorization has the form\n   P**T * A * P = U**H * U ,  if UPLO = 'U',\n   P**T * A * P = L  * L**H,  if UPLO = 'L',\nwhere U is an upper triangular matrix and L is lower triangular, and\nP is stored as vector PIV.\n\nThis algorithm does not attempt to check that A is positive\nsemidefinite. This version of the algorithm calls level 2 BLAS."), ('UPLO', "UPLO is CHARACTER*1\nSpecifies whether the upper or lower triangular part of the\nsymmetric matrix A is stored.\n= 'U':  Upper triangular\n= 'L':  Lower triangular"), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('A', "A is COMPLEX*16 array, dimension (LDA,N)\nOn entry, the symmetric matrix A.  If UPLO = 'U', the leading\nn by n upper triangular part of A contains the upper\ntriangular part of the matrix A, and the strictly lower\ntriangular part of A is not referenced.  If UPLO = 'L', the\nleading n by n lower triangular part of A contains the lower\ntriangular part of the matrix A, and the strictly upper\ntriangular part of A is not referenced.\n\nOn exit, if INFO = 0, the factor U or L from the Cholesky\nfactorization as above."), ('PIV', 'PIV is INTEGER array, dimension (N)\nPIV is such that the nonzero entries are P( PIV(K), K ) = 1.'), ('RANK', 'RANK is INTEGER\nThe rank of A given by the number of steps the algorithm\ncompleted.'), ('TOL', 'TOL is DOUBLE PRECISION\nUser defined tolerance. If TOL < 0, then N*U*MAX( A( K,K ) )\nwill be used. The algorithm terminates at the (K-1)st step\nif the pivot <= TOL.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (2*N)\nWork space.'), ('INFO', 'INFO is INTEGER\n< 0: If INFO = -K, the K-th argument had an illegal value,\n= 0: algorithm completed successfully, and\n> 0: the matrix A is either rank deficient with computed rank\n     as returned in RANK, or is indefinite.  See Section 7 of\n     LAPACK Working Note #161 for further information.'))
