(('zlaqp2', 'ZLAQP2 computes a QR factorization with column pivoting of\nthe block A(OFFSET+1:M,1:N).\nThe block A(1:OFFSET,1:N) is accordingly pivoted, but not factorized.'), ('M', 'M is INTEGER\nThe number of rows of the matrix A. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix A. N >= 0.'), ('OFFSET', 'OFFSET is INTEGER\nThe number of rows of the matrix A that must be pivoted\nbut no factorized. OFFSET >= 0.'), ('A', 'A is COMPLEX*16 array, dimension (LDA,N)\nOn entry, the M-by-N matrix A.\nOn exit, the upper triangle of block A(OFFSET+1:M,1:N) is\nthe triangular factor obtained; the elements in block\nA(OFFSET+1:M,1:N) below the diagonal, together with the\narray TAU, represent the orthogonal matrix Q as a product of\nelementary reflectors. Block A(1:OFFSET,1:N) has been\naccordingly pivoted, but no factorized.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1,M).'), ('JPVT', 'JPVT is INTEGER array, dimension (N)\nOn entry, if JPVT(i) .ne. 0, the i-th column of A is permuted\nto the front of A*P (a leading column); if JPVT(i) = 0,\nthe i-th column of A is a free column.\nOn exit, if JPVT(i) = k, then the i-th column of A*P\nwas the k-th column of A.'), ('TAU', 'TAU is COMPLEX*16 array, dimension (min(M,N))\nThe scalar factors of the elementary reflectors.'), ('VN1', 'VN1 is DOUBLE PRECISION array, dimension (N)\nThe vector with the partial column norms.'), ('VN2', 'VN2 is DOUBLE PRECISION array, dimension (N)\nThe vector with the exact column norms.'), ('WORK', 'WORK is COMPLEX*16 array, dimension (N)'))
