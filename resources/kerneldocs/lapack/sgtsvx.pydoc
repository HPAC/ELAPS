(('sgtsvx', 'SGTSVX uses the LU factorization to compute the solution to a real\nsystem of linear equations A * X = B or A**T * X = B,\nwhere A is a tridiagonal matrix of order N and X and B are N-by-NRHS\nmatrices.\n\nError bounds on the solution and a condition estimate are also\nprovided.'), ('FACT', "FACT is CHARACTER*1\nSpecifies whether or not the factored form of A has been\nsupplied on entry.\n= 'F':  DLF, DF, DUF, DU2, and IPIV contain the factored\n        form of A; DL, D, DU, DLF, DF, DUF, DU2 and IPIV\n        will not be modified.\n= 'N':  The matrix will be copied to DLF, DF, and DUF\n        and factored."), ('TRANS', "TRANS is CHARACTER*1\nSpecifies the form of the system of equations:\n= 'N':  A * X = B     (No transpose)\n= 'T':  A**T * X = B  (Transpose)\n= 'C':  A**H * X = B  (Conjugate transpose = Transpose)"), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('NRHS', 'NRHS is INTEGER\nThe number of right hand sides, i.e., the number of columns\nof the matrix B.  NRHS >= 0.'), ('DL', 'DL is REAL array, dimension (N-1)\nThe (n-1) subdiagonal elements of A.'), ('D', 'D is REAL array, dimension (N)\nThe n diagonal elements of A.'), ('DU', 'DU is REAL array, dimension (N-1)\nThe (n-1) superdiagonal elements of A.'), ('DLF', "DLF is REAL array, dimension (N-1)\nIf FACT = 'F', then DLF is an input argument and on entry\ncontains the (n-1) multipliers that define the matrix L from\nthe LU factorization of A as computed by SGTTRF.\n\nIf FACT = 'N', then DLF is an output argument and on exit\ncontains the (n-1) multipliers that define the matrix L from\nthe LU factorization of A."), ('DF', "DF is REAL array, dimension (N)\nIf FACT = 'F', then DF is an input argument and on entry\ncontains the n diagonal elements of the upper triangular\nmatrix U from the LU factorization of A.\n\nIf FACT = 'N', then DF is an output argument and on exit\ncontains the n diagonal elements of the upper triangular\nmatrix U from the LU factorization of A."), ('DUF', "DUF is REAL array, dimension (N-1)\nIf FACT = 'F', then DUF is an input argument and on entry\ncontains the (n-1) elements of the first superdiagonal of U.\n\nIf FACT = 'N', then DUF is an output argument and on exit\ncontains the (n-1) elements of the first superdiagonal of U."), ('DU2', "DU2 is REAL array, dimension (N-2)\nIf FACT = 'F', then DU2 is an input argument and on entry\ncontains the (n-2) elements of the second superdiagonal of\nU.\n\nIf FACT = 'N', then DU2 is an output argument and on exit\ncontains the (n-2) elements of the second superdiagonal of\nU."), ('IPIV', "IPIV is INTEGER array, dimension (N)\nIf FACT = 'F', then IPIV is an input argument and on entry\ncontains the pivot indices from the LU factorization of A as\ncomputed by SGTTRF.\n\nIf FACT = 'N', then IPIV is an output argument and on exit\ncontains the pivot indices from the LU factorization of A;\nrow i of the matrix was interchanged with row IPIV(i).\nIPIV(i) will always be either i or i+1; IPIV(i) = i indicates\na row interchange was not required."), ('B', 'B is REAL array, dimension (LDB,NRHS)\nThe N-by-NRHS right hand side matrix B.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B.  LDB >= max(1,N).'), ('X', 'X is REAL array, dimension (LDX,NRHS)\nIf INFO = 0 or INFO = N+1, the N-by-NRHS solution matrix X.'), ('LDX', 'LDX is INTEGER\nThe leading dimension of the array X.  LDX >= max(1,N).'), ('RCOND', 'RCOND is REAL\nThe estimate of the reciprocal condition number of the matrix\nA.  If RCOND is less than the machine precision (in\nparticular, if RCOND = 0), the matrix is singular to working\nprecision.  This condition is indicated by a return code of\nINFO > 0.'), ('FERR', 'FERR is REAL array, dimension (NRHS)\nThe estimated forward error bound for each solution vector\nX(j) (the j-th column of the solution matrix X).\nIf XTRUE is the true solution corresponding to X(j), FERR(j)\nis an estimated upper bound for the magnitude of the largest\nelement in (X(j) - XTRUE) divided by the magnitude of the\nlargest element in X(j).  The estimate is as reliable as\nthe estimate for RCOND, and is almost always a slight\noverestimate of the true error.'), ('BERR', 'BERR is REAL array, dimension (NRHS)\nThe componentwise relative backward error of each solution\nvector X(j) (i.e., the smallest relative change in\nany element of A or B that makes X(j) an exact solution).'), ('WORK', 'WORK is REAL array, dimension (3*N)'), ('IWORK', 'IWORK is INTEGER array, dimension (N)'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = i, and i is\n      <= N:  U(i,i) is exactly zero.  The factorization\n             has not been completed unless i = N, but the\n             factor U is exactly singular, so the solution\n             and error bounds could not be computed.\n             RCOND = 0 is returned.\n      = N+1: U is nonsingular, but RCOND is less than machine\n             precision, meaning that the matrix is singular\n             to working precision.  Nevertheless, the\n             solution and error bounds are computed because\n             there are a number of situations where the\n             computed solution can be more accurate than the\n             value of RCOND would suggest.'))
