(('dsytrf', 'DSYTRF computes the factorization of a real symmetric matrix A using\nthe Bunch-Kaufman diagonal pivoting method.  The form of the\nfactorization is\n\n   A = U*D*U**T  or  A = L*D*L**T\n\nwhere U (or L) is a product of permutation and unit upper (lower)\ntriangular matrices, and D is symmetric and block diagonal with\n1-by-1 and 2-by-2 diagonal blocks.\n\nThis is the blocked version of the algorithm, calling Level 3 BLAS.'), ('UPLO', "UPLO is CHARACTER*1\n= 'U':  Upper triangle of A is stored;\n= 'L':  Lower triangle of A is stored."), ('N', 'N is INTEGER\nThe order of the matrix A.  N >= 0.'), ('A', "A is DOUBLE PRECISION array, dimension (LDA,N)\nOn entry, the symmetric matrix A.  If UPLO = 'U', the leading\nN-by-N upper triangular part of A contains the upper\ntriangular part of the matrix A, and the strictly lower\ntriangular part of A is not referenced.  If UPLO = 'L', the\nleading N-by-N lower triangular part of A contains the lower\ntriangular part of the matrix A, and the strictly upper\ntriangular part of A is not referenced.\n\nOn exit, the block diagonal matrix D and the multipliers used\nto obtain the factor U or L (see below for further details)."), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('IPIV', "IPIV is INTEGER array, dimension (N)\nDetails of the interchanges and the block structure of D.\nIf IPIV(k) > 0, then rows and columns k and IPIV(k) were\ninterchanged and D(k,k) is a 1-by-1 diagonal block.\nIf UPLO = 'U' and IPIV(k) = IPIV(k-1) < 0, then rows and\ncolumns k-1 and -IPIV(k) were interchanged and D(k-1:k,k-1:k)\nis a 2-by-2 diagonal block.  If UPLO = 'L' and IPIV(k) =\nIPIV(k+1) < 0, then rows and columns k+1 and -IPIV(k) were\ninterchanged and D(k:k+1,k:k+1) is a 2-by-2 diagonal block."), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe length of WORK.  LWORK >=1.  For best performance\nLWORK >= N*NB, where NB is the block size returned by ILAENV.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = i, D(i,i) is exactly zero.  The factorization\n      has been completed, but the block diagonal matrix D is\n      exactly singular, and division by zero will occur if it\n      is used to solve a system of equations.'))
