(('zgelsx', 'This routine is deprecated and has been replaced by routine ZGELSY.\n\nZGELSX computes the minimum-norm solution to a complex linear least\nsquares problem:\n    minimize || A * X - B ||\nusing a complete orthogonal factorization of A.  A is an M-by-N\nmatrix which may be rank-deficient.\n\nSeveral right hand side vectors b and solution vectors x can be\nhandled in a single call; they are stored as the columns of the\nM-by-NRHS right hand side matrix B and the N-by-NRHS solution\nmatrix X.\n\nThe routine first computes a QR factorization with column pivoting:\n    A * P = Q * [ R11 R12 ]\n                [  0  R22 ]\nwith R11 defined as the largest leading submatrix whose estimated\ncondition number is less than 1/RCOND.  The order of R11, RANK,\nis the effective rank of A.\n\nThen, R22 is considered to be negligible, and R12 is annihilated\nby unitary transformations from the right, arriving at the\ncomplete orthogonal factorization:\n   A * P = Q * [ T11 0 ] * Z\n               [  0  0 ]\nThe minimum-norm solution is then\n   X = P * Z**H [ inv(T11)*Q1**H*B ]\n                [        0         ]\nwhere Q1 consists of the first RANK columns of Q.'), ('M', 'M is INTEGER\nThe number of rows of the matrix A.  M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix A.  N >= 0.'), ('NRHS', 'NRHS is INTEGER\nThe number of right hand sides, i.e., the number of\ncolumns of matrices B and X. NRHS >= 0.'), ('A', 'A is COMPLEX*16 array, dimension (LDA,N)\nOn entry, the M-by-N matrix A.\nOn exit, A has been overwritten by details of its\ncomplete orthogonal factorization.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,M).'), ('B', 'B is COMPLEX*16 array, dimension (LDB,NRHS)\nOn entry, the M-by-NRHS right hand side matrix B.\nOn exit, the N-by-NRHS solution matrix X.\nIf m >= n and RANK = n, the residual sum-of-squares for\nthe solution in the i-th column is given by the sum of\nsquares of elements N+1:M in that column.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B. LDB >= max(1,M,N).'), ('JPVT', 'JPVT is INTEGER array, dimension (N)\nOn entry, if JPVT(i) .ne. 0, the i-th column of A is an\ninitial column, otherwise it is a free column.  Before\nthe QR factorization of A, all initial columns are\npermuted to the leading positions; only the remaining\nfree columns are moved as a result of column pivoting\nduring the factorization.\nOn exit, if JPVT(i) = k, then the i-th column of A*P\nwas the k-th column of A.'), ('RCOND', 'RCOND is DOUBLE PRECISION\nRCOND is used to determine the effective rank of A, which\nis defined as the order of the largest leading triangular\nsubmatrix R11 in the QR factorization with pivoting of A,\nwhose estimated condition number < 1/RCOND.'), ('RANK', 'RANK is INTEGER\nThe effective rank of A, i.e., the order of the submatrix\nR11.  This is the same as the order of the submatrix T11\nin the complete orthogonal factorization of A.'), ('WORK', 'WORK is COMPLEX*16 array, dimension\n            (min(M,N) + max( N, 2*min(M,N)+NRHS )),'), ('RWORK', 'RWORK is DOUBLE PRECISION array, dimension (2*N)'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value'))
