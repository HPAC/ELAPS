(('dlaqtr', 'DLAQTR solves the real quasi-triangular system\n\n             op(T)*p = scale*c,               if LREAL = .TRUE.\n\nor the complex quasi-triangular systems\n\n           op(T + iB)*(p+iq) = scale*(c+id),  if LREAL = .FALSE.\n\nin real arithmetic, where T is upper quasi-triangular.\nIf LREAL = .FALSE., then the first diagonal block of T must be\n1 by 1, B is the specially structured matrix\n\n               B = [ b(1) b(2) ... b(n) ]\n                   [       w            ]\n                   [           w        ]\n                   [              .     ]\n                   [                 w  ]\n\nop(A) = A or A**T, A**T denotes the transpose of\nmatrix A.\n\nOn input, X = [ c ].  On output, X = [ p ].\n              [ d ]                  [ q ]\n\nThis subroutine is designed for the condition number estimation\nin routine DTRSNA.'), ('LTRAN', 'LTRAN is LOGICAL\nOn entry, LTRAN specifies the option of conjugate transpose:\n   = .FALSE.,    op(T+i*B) = T+i*B,\n   = .TRUE.,     op(T+i*B) = (T+i*B)**T.'), ('LREAL', 'LREAL is LOGICAL\nOn entry, LREAL specifies the input matrix structure:\n   = .FALSE.,    the input is complex\n   = .TRUE.,     the input is real'), ('N', 'N is INTEGER\nOn entry, N specifies the order of T+i*B. N >= 0.'), ('T', 'T is DOUBLE PRECISION array, dimension (LDT,N)\nOn entry, T contains a matrix in Schur canonical form.\nIf LREAL = .FALSE., then the first diagonal block of T mu\nbe 1 by 1.'), ('LDT', 'LDT is INTEGER\nThe leading dimension of the matrix T. LDT >= max(1,N).'), ('B', 'B is DOUBLE PRECISION array, dimension (N)\nOn entry, B contains the elements to form the matrix\nB as described above.\nIf LREAL = .TRUE., B is not referenced.'), ('W', 'W is DOUBLE PRECISION\nOn entry, W is the diagonal element of the matrix B.\nIf LREAL = .TRUE., W is not referenced.'), ('SCALE', 'SCALE is DOUBLE PRECISION\nOn exit, SCALE is the scale factor.'), ('X', 'X is DOUBLE PRECISION array, dimension (2*N)\nOn entry, X contains the right hand side of the system.\nOn exit, X is overwritten by the solution.'), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (N)'), ('INFO', 'INFO is INTEGER\nOn exit, INFO is set to\n   0: successful exit.\n     1: the some diagonal 1 by 1 block has been perturbed by\n        a small number SMIN to keep nonsingularity.\n     2: the some diagonal 2 by 2 block has been perturbed by\n        a small number in DLALN2 to keep nonsingularity.\nNOTE: In the interests of speed, this routine does not\n      check the inputs for errors.'))
