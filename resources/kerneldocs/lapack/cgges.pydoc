(('cgges', 'CGGES computes for a pair of N-by-N complex nonsymmetric matrices\n(A,B), the generalized eigenvalues, the generalized complex Schur\nform (S, T), and optionally left and/or right Schur vectors (VSL\nand VSR). This gives the generalized Schur factorization\n\n        (A,B) = ( (VSL)*S*(VSR)**H, (VSL)*T*(VSR)**H )\n\nwhere (VSR)**H is the conjugate-transpose of VSR.\n\nOptionally, it also orders the eigenvalues so that a selected cluster\nof eigenvalues appears in the leading diagonal blocks of the upper\ntriangular matrix S and the upper triangular matrix T. The leading\ncolumns of VSL and VSR then form an unitary basis for the\ncorresponding left and right eigenspaces (deflating subspaces).\n\n(If only the generalized eigenvalues are needed, use the driver\nCGGEV instead, which is faster.)\n\nA generalized eigenvalue for a pair of matrices (A,B) is a scalar w\nor a ratio alpha/beta = w, such that  A - w*B is singular.  It is\nusually represented as the pair (alpha,beta), as there is a\nreasonable interpretation for beta=0, and even for both being zero.\n\nA pair of matrices (S,T) is in generalized complex Schur form if S\nand T are upper triangular and, in addition, the diagonal elements\nof T are non-negative real numbers.'), ('JOBVSL', "JOBVSL is CHARACTER*1\n= 'N':  do not compute the left Schur vectors;\n= 'V':  compute the left Schur vectors."), ('JOBVSR', "JOBVSR is CHARACTER*1\n= 'N':  do not compute the right Schur vectors;\n= 'V':  compute the right Schur vectors."), ('SORT', "SORT is CHARACTER*1\nSpecifies whether or not to order the eigenvalues on the\ndiagonal of the generalized Schur form.\n= 'N':  Eigenvalues are not ordered;\n= 'S':  Eigenvalues are ordered (see SELCTG)."), ('SELCTG', "SELCTG is a LOGICAL FUNCTION of two COMPLEX arguments\nSELCTG must be declared EXTERNAL in the calling subroutine.\nIf SORT = 'N', SELCTG is not referenced.\nIf SORT = 'S', SELCTG is used to select eigenvalues to sort\nto the top left of the Schur form.\nAn eigenvalue ALPHA(j)/BETA(j) is selected if\nSELCTG(ALPHA(j),BETA(j)) is true.\n\nNote that a selected complex eigenvalue may no longer satisfy\nSELCTG(ALPHA(j),BETA(j)) = .TRUE. after ordering, since\nordering may change the value of complex eigenvalues\n(especially if the eigenvalue is ill-conditioned), in this\ncase INFO is set to N+2 (See INFO below)."), ('N', 'N is INTEGER\nThe order of the matrices A, B, VSL, and VSR.  N >= 0.'), ('A', 'A is COMPLEX array, dimension (LDA, N)\nOn entry, the first of the pair of matrices.\nOn exit, A has been overwritten by its generalized Schur\nform S.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of A.  LDA >= max(1,N).'), ('B', 'B is COMPLEX array, dimension (LDB, N)\nOn entry, the second of the pair of matrices.\nOn exit, B has been overwritten by its generalized Schur\nform T.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of B.  LDB >= max(1,N).'), ('SDIM', "SDIM is INTEGER\nIf SORT = 'N', SDIM = 0.\nIf SORT = 'S', SDIM = number of eigenvalues (after sorting)\nfor which SELCTG is true."), ('ALPHA', 'ALPHA is COMPLEX array, dimension (N)'), ('BETA', 'BETA is COMPLEX array, dimension (N)\nOn exit,  ALPHA(j)/BETA(j), j=1,...,N, will be the\ngeneralized eigenvalues.  ALPHA(j), j=1,...,N  and  BETA(j),\nj=1,...,N  are the diagonals of the complex Schur form (A,B)\noutput by CGGES. The  BETA(j) will be non-negative real.\n\nNote: the quotients ALPHA(j)/BETA(j) may easily over- or\nunderflow, and BETA(j) may even be zero.  Thus, the user\nshould avoid naively computing the ratio alpha/beta.\nHowever, ALPHA will be always less than and usually\ncomparable with norm(A) in magnitude, and BETA always less\nthan and usually comparable with norm(B).'), ('VSL', "VSL is COMPLEX array, dimension (LDVSL,N)\nIf JOBVSL = 'V', VSL will contain the left Schur vectors.\nNot referenced if JOBVSL = 'N'."), ('LDVSL', "LDVSL is INTEGER\nThe leading dimension of the matrix VSL. LDVSL >= 1, and\nif JOBVSL = 'V', LDVSL >= N."), ('VSR', "VSR is COMPLEX array, dimension (LDVSR,N)\nIf JOBVSR = 'V', VSR will contain the right Schur vectors.\nNot referenced if JOBVSR = 'N'."), ('LDVSR', "LDVSR is INTEGER\nThe leading dimension of the matrix VSR. LDVSR >= 1, and\nif JOBVSR = 'V', LDVSR >= N."), ('WORK', 'WORK is COMPLEX array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK.  LWORK >= max(1,2*N).\nFor good performance, LWORK must generally be larger.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('RWORK', 'RWORK is REAL array, dimension (8*N)'), ('BWORK', "BWORK is LOGICAL array, dimension (N)\nNot referenced if SORT = 'N'."), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value.\n=1,...,N:\n      The QZ iteration failed.  (A,B) are not in Schur\n      form, but ALPHA(j) and BETA(j) should be correct for\n      j=INFO+1,...,N.\n> N:  =N+1: other than QZ iteration failed in CHGEQZ\n      =N+2: after reordering, roundoff changed values of\n            some complex eigenvalues so that leading\n            eigenvalues in the Generalized Schur form no\n            longer satisfy SELCTG=.TRUE.  This could also\n            be caused due to scaling.\n      =N+3: reordering falied in CTGSEN.'))
