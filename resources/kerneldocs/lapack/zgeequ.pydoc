(('zgeequ', 'ZGEEQU computes row and column scalings intended to equilibrate an\nM-by-N matrix A and reduce its condition number.  R returns the row\nscale factors and C the column scale factors, chosen to try to make\nthe largest element in each row and column of the matrix B with\nelements B(i,j)=R(i)*A(i,j)*C(j) have absolute value 1.\n\nR(i) and C(j) are restricted to be between SMLNUM = smallest safe\nnumber and BIGNUM = largest safe number.  Use of these scaling\nfactors is not guaranteed to reduce the condition number of A but\nworks well in practice.'), ('M', 'M is INTEGER\nThe number of rows of the matrix A.  M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix A.  N >= 0.'), ('A', 'A is COMPLEX*16 array, dimension (LDA,N)\nThe M-by-N matrix whose equilibration factors are\nto be computed.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,M).'), ('R', 'R is DOUBLE PRECISION array, dimension (M)\nIf INFO = 0 or INFO > M, R contains the row scale factors\nfor A.'), ('C', 'C is DOUBLE PRECISION array, dimension (N)\nIf INFO = 0,  C contains the column scale factors for A.'), ('ROWCND', 'ROWCND is DOUBLE PRECISION\nIf INFO = 0 or INFO > M, ROWCND contains the ratio of the\nsmallest R(i) to the largest R(i).  If ROWCND >= 0.1 and\nAMAX is neither too large nor too small, it is not worth\nscaling by R.'), ('COLCND', 'COLCND is DOUBLE PRECISION\nIf INFO = 0, COLCND contains the ratio of the smallest\nC(i) to the largest C(i).  If COLCND >= 0.1, it is not\nworth scaling by C.'), ('AMAX', 'AMAX is DOUBLE PRECISION\nAbsolute value of largest matrix element.  If AMAX is very\nclose to overflow or very close to underflow, the matrix\nshould be scaled.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = i,  and i is\n      <= M:  the i-th row of A is exactly zero\n      >  M:  the (i-M)-th column of A is exactly zero'))
