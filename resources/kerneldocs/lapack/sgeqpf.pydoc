(('sgeqpf', 'This routine is deprecated and has been replaced by routine SGEQP3.\n\nSGEQPF computes a QR factorization with column pivoting of a\nreal M-by-N matrix A: A*P = Q*R.'), ('M', 'M is INTEGER\nThe number of rows of the matrix A. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix A. N >= 0'), ('A', 'A is REAL array, dimension (LDA,N)\nOn entry, the M-by-N matrix A.\nOn exit, the upper triangle of the array contains the\nmin(M,N)-by-N upper triangular matrix R; the elements\nbelow the diagonal, together with the array TAU,\nrepresent the orthogonal matrix Q as a product of\nmin(m,n) elementary reflectors.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1,M).'), ('JPVT', 'JPVT is INTEGER array, dimension (N)\nOn entry, if JPVT(i) .ne. 0, the i-th column of A is permuted\nto the front of A*P (a leading column); if JPVT(i) = 0,\nthe i-th column of A is a free column.\nOn exit, if JPVT(i) = k, then the i-th column of A*P\nwas the k-th column of A.'), ('TAU', 'TAU is REAL array, dimension (min(M,N))\nThe scalar factors of the elementary reflectors.'), ('WORK', 'WORK is REAL array, dimension (3*N)'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value'))
