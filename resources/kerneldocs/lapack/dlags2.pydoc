(('dlags2', 'DLAGS2 computes 2-by-2 orthogonal matrices U, V and Q, such\nthat if ( UPPER ) then\n\n          U**T *A*Q = U**T *( A1 A2 )*Q = ( x  0  )\n                            ( 0  A3 )     ( x  x  )\nand\n          V**T*B*Q = V**T *( B1 B2 )*Q = ( x  0  )\n                           ( 0  B3 )     ( x  x  )\n\nor if ( .NOT.UPPER ) then\n\n          U**T *A*Q = U**T *( A1 0  )*Q = ( x  x  )\n                            ( A2 A3 )     ( 0  x  )\nand\n          V**T*B*Q = V**T*( B1 0  )*Q = ( x  x  )\n                          ( B2 B3 )     ( 0  x  )\n\nThe rows of the transformed A and B are parallel, where\n\n  U = (  CSU  SNU ), V = (  CSV SNV ), Q = (  CSQ   SNQ )\n      ( -SNU  CSU )      ( -SNV CSV )      ( -SNQ   CSQ )\n\nZ**T denotes the transpose of Z.'), ('UPPER', 'UPPER is LOGICAL\n= .TRUE.: the input matrices A and B are upper triangular.\n= .FALSE.: the input matrices A and B are lower triangular.'), ('A1', 'A1 is DOUBLE PRECISION'), ('A2', 'A2 is DOUBLE PRECISION'), ('A3', 'A3 is DOUBLE PRECISION\nOn entry, A1, A2 and A3 are elements of the input 2-by-2\nupper (lower) triangular matrix A.'), ('B1', 'B1 is DOUBLE PRECISION'), ('B2', 'B2 is DOUBLE PRECISION'), ('B3', 'B3 is DOUBLE PRECISION\nOn entry, B1, B2 and B3 are elements of the input 2-by-2\nupper (lower) triangular matrix B.'), ('CSU', 'CSU is DOUBLE PRECISION'), ('SNU', 'SNU is DOUBLE PRECISION\nThe desired orthogonal matrix U.'), ('CSV', 'CSV is DOUBLE PRECISION'), ('SNV', 'SNV is DOUBLE PRECISION\nThe desired orthogonal matrix V.'), ('CSQ', 'CSQ is DOUBLE PRECISION'), ('SNQ', 'SNQ is DOUBLE PRECISION\nThe desired orthogonal matrix Q.'))
