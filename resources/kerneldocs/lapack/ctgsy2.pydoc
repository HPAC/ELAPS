(('ctgsy2', "CTGSY2 solves the generalized Sylvester equation\n\n            A * R - L * B = scale *  C               (1)\n            D * R - L * E = scale * F\n\nusing Level 1 and 2 BLAS, where R and L are unknown M-by-N matrices,\n(A, D), (B, E) and (C, F) are given matrix pairs of size M-by-M,\nN-by-N and M-by-N, respectively. A, B, D and E are upper triangular\n(i.e., (A,D) and (B,E) in generalized Schur form).\n\nThe solution (R, L) overwrites (C, F). 0 <= SCALE <= 1 is an output\nscaling factor chosen to avoid overflow.\n\nIn matrix notation solving equation (1) corresponds to solve\nZx = scale * b, where Z is defined as\n\n       Z = [ kron(In, A)  -kron(B**H, Im) ]             (2)\n           [ kron(In, D)  -kron(E**H, Im) ],\n\nIk is the identity matrix of size k and X**H is the transpose of X.\nkron(X, Y) is the Kronecker product between the matrices X and Y.\n\nIf TRANS = 'C', y in the conjugate transposed system Z**H*y = scale*b\nis solved for, which is equivalent to solve for R and L in\n\n            A**H * R  + D**H * L   = scale * C           (3)\n            R  * B**H + L  * E**H  = scale * -F\n\nThis case is used to compute an estimate of Dif[(A, D), (B, E)] =\n= sigma_min(Z) using reverse communicaton with CLACON.\n\nCTGSY2 also (IJOB >= 1) contributes to the computation in CTGSYL\nof an upper bound on the separation between to matrix pairs. Then\nthe input (A, D), (B, E) are sub-pencils of two matrix pairs in\nCTGSYL."), ('TRANS', "TRANS is CHARACTER*1\n= 'N', solve the generalized Sylvester equation (1).\n= 'T': solve the 'transposed' system (3)."), ('IJOB', "IJOB is INTEGER\nSpecifies what kind of functionality to be performed.\n=0: solve (1) only.\n=1: A contribution from this subsystem to a Frobenius\n    norm-based estimate of the separation between two matrix\n    pairs is computed. (look ahead strategy is used).\n=2: A contribution from this subsystem to a Frobenius\n    norm-based estimate of the separation between two matrix\n    pairs is computed. (SGECON on sub-systems is used.)\nNot referenced if TRANS = 'T'."), ('M', 'M is INTEGER\nOn entry, M specifies the order of A and D, and the row\ndimension of C, F, R and L.'), ('N', 'N is INTEGER\nOn entry, N specifies the order of B and E, and the column\ndimension of C, F, R and L.'), ('A', 'A is COMPLEX array, dimension (LDA, M)\nOn entry, A contains an upper triangular matrix.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the matrix A. LDA >= max(1, M).'), ('B', 'B is COMPLEX array, dimension (LDB, N)\nOn entry, B contains an upper triangular matrix.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the matrix B. LDB >= max(1, N).'), ('C', 'C is COMPLEX array, dimension (LDC, N)\nOn entry, C contains the right-hand-side of the first matrix\nequation in (1).\nOn exit, if IJOB = 0, C has been overwritten by the solution\nR.'), ('LDC', 'LDC is INTEGER\nThe leading dimension of the matrix C. LDC >= max(1, M).'), ('D', 'D is COMPLEX array, dimension (LDD, M)\nOn entry, D contains an upper triangular matrix.'), ('LDD', 'LDD is INTEGER\nThe leading dimension of the matrix D. LDD >= max(1, M).'), ('E', 'E is COMPLEX array, dimension (LDE, N)\nOn entry, E contains an upper triangular matrix.'), ('LDE', 'LDE is INTEGER\nThe leading dimension of the matrix E. LDE >= max(1, N).'), ('F', 'F is COMPLEX array, dimension (LDF, N)\nOn entry, F contains the right-hand-side of the second matrix\nequation in (1).\nOn exit, if IJOB = 0, F has been overwritten by the solution\nL.'), ('LDF', 'LDF is INTEGER\nThe leading dimension of the matrix F. LDF >= max(1, M).'), ('SCALE', 'SCALE is REAL\nOn exit, 0 <= SCALE <= 1. If 0 < SCALE < 1, the solutions\nR and L (C and F on entry) will hold the solutions to a\nslightly perturbed system but the input matrices A, B, D and\nE have not been changed. If SCALE = 0, R and L will hold the\nsolutions to the homogeneous system with C = F = 0.\nNormally, SCALE = 1.'), ('RDSUM', "RDSUM is REAL\nOn entry, the sum of squares of computed contributions to\nthe Dif-estimate under computation by CTGSYL, where the\nscaling factor RDSCAL (see below) has been factored out.\nOn exit, the corresponding sum of squares updated with the\ncontributions from the current sub-system.\nIf TRANS = 'T' RDSUM is not touched.\nNOTE: RDSUM only makes sense when CTGSY2 is called by\nCTGSYL."), ('RDSCAL', "RDSCAL is REAL\nOn entry, scaling factor used to prevent overflow in RDSUM.\nOn exit, RDSCAL is updated w.r.t. the current contributions\nin RDSUM.\nIf TRANS = 'T', RDSCAL is not touched.\nNOTE: RDSCAL only makes sense when CTGSY2 is called by\nCTGSYL."), ('INFO', 'INFO is INTEGER\nOn exit, if INFO is set to\n  =0: Successful exit\n  <0: If INFO = -i, input argument number i is illegal.\n  >0: The matrix pairs (A, D) and (B, E) have common or very\n      close eigenvalues.'))
