(('claed8', 'CLAED8 merges the two sets of eigenvalues together into a single\nsorted set.  Then it tries to deflate the size of the problem.\nThere are two ways in which deflation can occur:  when two or more\neigenvalues are close together or if there is a tiny element in the\nZ vector.  For each such occurrence the order of the related secular\nequation problem is reduced by one.'), ('K', 'K is INTEGER\nontains the number of non-deflated eigenvalues.\nhis is the order of the related secular equation.'), ('N', 'N is INTEGER\nhe dimension of the symmetric tridiagonal matrix.  N >= 0.'), ('QSIZ', 'QSIZ is INTEGER\nhe dimension of the unitary matrix used to reduce\nhe dense or band matrix to tridiagonal form.\nSIZ >= N if ICOMPQ = 1.'), ('Q', 'Q is COMPLEX array, dimension (LDQ,N)\nn entry, Q contains the eigenvectors of the partially solved\nystem which has been previously updated in matrix\nultiplies with other partially solved eigensystems.\nn exit, Q contains the trailing (N-K) updated eigenvectors\nthose which were deflated) in its last N-K columns.'), ('LDQ', 'LDQ is INTEGER\nhe leading dimension of the array Q.  LDQ >= max( 1, N ).'), ('D', 'D is REAL array, dimension (N)\nn entry, D contains the eigenvalues of the two submatrices to\ne combined.  On exit, D contains the trailing (N-K) updated\nigenvalues (those which were deflated) sorted into increasing\nrder.'), ('RHO', 'RHO is REAL\nontains the off diagonal element associated with the rank-1\nut which originally split the two submatrices which are now\neing recombined. RHO is modified during the computation to\nhe value required by SLAED3.'), ('CUTPNT', 'CUTPNT is INTEGER\nontains the location of the last eigenvalue in the leading\nub-matrix.  MIN(1,N) <= CUTPNT <= N.'), ('Z', 'Z is REAL array, dimension (N)\nn input this vector contains the updating vector (the last\now of the first sub-eigenvector matrix and the first row of\nhe second sub-eigenvector matrix).  The contents of Z are\nestroyed during the updating process.'), ('DLAMDA', 'DLAMDA is REAL array, dimension (N)\nontains a copy of the first K eigenvalues which will be used\ny SLAED3 to form the secular equation.'), ('Q2', 'Q2 is COMPLEX array, dimension (LDQ2,N)\nf ICOMPQ = 0, Q2 is not referenced.  Otherwise,\nontains a copy of the first K eigenvectors which will be used\ny SLAED7 in a matrix multiply (SGEMM) to update the new\nigenvectors.'), ('LDQ2', 'LDQ2 is INTEGER\nhe leading dimension of the array Q2.  LDQ2 >= max( 1, N ).'), ('W', 'W is REAL array, dimension (N)\nhis will hold the first k values of the final\neflation-altered z-vector and will be passed to SLAED3.'), ('INDXP', 'INDXP is INTEGER array, dimension (N)\nhis will contain the permutation used to place deflated\nalues of D at the end of the array. On output INDXP(1:K)\noints to the nondeflated D-values and INDXP(K+1:N)\noints to the deflated eigenvalues.'), ('INDX', 'INDX is INTEGER array, dimension (N)\nhis will contain the permutation used to sort the contents of\n into ascending order.'), ('INDXQ', 'INDXQ is INTEGER array, dimension (N)\nhis contains the permutation which separately sorts the two\nub-problems in D into ascending order.  Note that elements in\nhe second half of this permutation must first have CUTPNT\ndded to their values in order to be accurate.'), ('PERM', 'PERM is INTEGER array, dimension (N)\nontains the permutations (from deflation and sorting) to be\npplied to each eigenblock.'), ('GIVPTR', 'GIVPTR is INTEGER\nontains the number of Givens rotations which took place in\nhis subproblem.'), ('GIVCOL', 'GIVCOL is INTEGER array, dimension (2, N)\nach pair of numbers indicates a pair of columns to take place\nn a Givens rotation.'), ('GIVNUM', 'GIVNUM is REAL array, dimension (2, N)\nach number indicates the S value to be used in the\norresponding Givens rotation.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit.\n< 0:  if INFO = -i, the i-th argument had an illegal value.'))
