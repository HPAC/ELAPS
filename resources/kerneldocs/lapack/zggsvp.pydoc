(('zggsvp', 'ZGGSVP computes unitary matrices U, V and Q such that\n\n                   N-K-L  K    L\n U**H*A*Q =     K ( 0    A12  A13 )  if M-K-L >= 0;\n                L ( 0     0   A23 )\n            M-K-L ( 0     0    0  )\n\n                 N-K-L  K    L\n        =     K ( 0    A12  A13 )  if M-K-L < 0;\n            M-K ( 0     0   A23 )\n\n                 N-K-L  K    L\n V**H*B*Q =   L ( 0     0   B13 )\n            P-L ( 0     0    0  )\n\nwhere the K-by-K matrix A12 and L-by-L matrix B13 are nonsingular\nupper triangular; A23 is L-by-L upper triangular if M-K-L >= 0,\notherwise A23 is (M-K)-by-L upper trapezoidal.  K+L = the effective\nnumerical rank of the (M+P)-by-N matrix (A**H,B**H)**H. \n\nThis decomposition is the preprocessing step for computing the\nGeneralized Singular Value Decomposition (GSVD), see subroutine\nZGGSVD.'), ('JOBU', "JOBU is CHARACTER*1\n= 'U':  Unitary matrix U is computed;\n= 'N':  U is not computed."), ('JOBV', "JOBV is CHARACTER*1\n= 'V':  Unitary matrix V is computed;\n= 'N':  V is not computed."), ('JOBQ', "JOBQ is CHARACTER*1\n= 'Q':  Unitary matrix Q is computed;\n= 'N':  Q is not computed."), ('M', 'M is INTEGER\nThe number of rows of the matrix A.  M >= 0.'), ('P', 'P is INTEGER\nThe number of rows of the matrix B.  P >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrices A and B.  N >= 0.'), ('A', 'A is COMPLEX*16 array, dimension (LDA,N)\nOn entry, the M-by-N matrix A.\nOn exit, A contains the triangular (or trapezoidal) matrix\ndescribed in the Purpose section.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1,M).'), ('B', 'B is COMPLEX*16 array, dimension (LDB,N)\nOn entry, the P-by-N matrix B.\nOn exit, B contains the triangular matrix described in\nthe Purpose section.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B. LDB >= max(1,P).'), ('TOLA', 'TOLA is DOUBLE PRECISION'), ('TOLB', 'TOLB is DOUBLE PRECISION\n\nTOLA and TOLB are the thresholds to determine the effective\nnumerical rank of matrix B and a subblock of A. Generally,\nthey are set to\n   TOLA = MAX(M,N)*norm(A)*MAZHEPS,\n   TOLB = MAX(P,N)*norm(B)*MAZHEPS.\nThe size of TOLA and TOLB may affect the size of backward\nerrors of the decomposition.'), ('K', 'K is INTEGER'), ('L', 'L is INTEGER\n\nOn exit, K and L specify the dimension of the subblocks\ndescribed in Purpose section.\nK + L = effective numerical rank of (A**H,B**H)**H.'), ('U', "U is COMPLEX*16 array, dimension (LDU,M)\nIf JOBU = 'U', U contains the unitary matrix U.\nIf JOBU = 'N', U is not referenced."), ('LDU', "LDU is INTEGER\nThe leading dimension of the array U. LDU >= max(1,M) if\nJOBU = 'U'; LDU >= 1 otherwise."), ('V', "V is COMPLEX*16 array, dimension (LDV,P)\nIf JOBV = 'V', V contains the unitary matrix V.\nIf JOBV = 'N', V is not referenced."), ('LDV', "LDV is INTEGER\nThe leading dimension of the array V. LDV >= max(1,P) if\nJOBV = 'V'; LDV >= 1 otherwise."), ('Q', "Q is COMPLEX*16 array, dimension (LDQ,N)\nIf JOBQ = 'Q', Q contains the unitary matrix Q.\nIf JOBQ = 'N', Q is not referenced."), ('LDQ', "LDQ is INTEGER\nThe leading dimension of the array Q. LDQ >= max(1,N) if\nJOBQ = 'Q'; LDQ >= 1 otherwise."), ('IWORK', 'IWORK is INTEGER array, dimension (N)'), ('RWORK', 'RWORK is DOUBLE PRECISION array, dimension (2*N)'), ('TAU', 'TAU is COMPLEX*16 array, dimension (N)'), ('WORK', 'WORK is COMPLEX*16 array, dimension (max(3*N,M,P))'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value.'))
