(('zsysvx', 'ZSYSVX uses the diagonal pivoting factorization to compute the\nsolution to a complex system of linear equations A * X = B,\nwhere A is an N-by-N symmetric matrix and X and B are N-by-NRHS\nmatrices.\n\nError bounds on the solution and a condition estimate are also\nprovided.'), ('FACT', "FACT is CHARACTER*1\nSpecifies whether or not the factored form of A has been\nsupplied on entry.\n= 'F':  On entry, AF and IPIV contain the factored form\n        of A.  A, AF and IPIV will not be modified.\n= 'N':  The matrix A will be copied to AF and factored."), ('UPLO', "UPLO is CHARACTER*1\n= 'U':  Upper triangle of A is stored;\n= 'L':  Lower triangle of A is stored."), ('N', 'N is INTEGER\nThe number of linear equations, i.e., the order of the\nmatrix A.  N >= 0.'), ('NRHS', 'NRHS is INTEGER\nThe number of right hand sides, i.e., the number of columns\nof the matrices B and X.  NRHS >= 0.'), ('A', "A is COMPLEX*16 array, dimension (LDA,N)\nThe symmetric matrix A.  If UPLO = 'U', the leading N-by-N\nupper triangular part of A contains the upper triangular part\nof the matrix A, and the strictly lower triangular part of A\nis not referenced.  If UPLO = 'L', the leading N-by-N lower\ntriangular part of A contains the lower triangular part of\nthe matrix A, and the strictly upper triangular part of A is\nnot referenced."), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A.  LDA >= max(1,N).'), ('AF', "AF is COMPLEX*16 array, dimension (LDAF,N)\nIf FACT = 'F', then AF is an input argument and on entry\ncontains the block diagonal matrix D and the multipliers used\nto obtain the factor U or L from the factorization\nA = U*D*U**T or A = L*D*L**T as computed by ZSYTRF.\n\nIf FACT = 'N', then AF is an output argument and on exit\nreturns the block diagonal matrix D and the multipliers used\nto obtain the factor U or L from the factorization\nA = U*D*U**T or A = L*D*L**T."), ('LDAF', 'LDAF is INTEGER\nThe leading dimension of the array AF.  LDAF >= max(1,N).'), ('IPIV', "IPIV is INTEGER array, dimension (N)\nIf FACT = 'F', then IPIV is an input argument and on entry\ncontains details of the interchanges and the block structure\nof D, as determined by ZSYTRF.\nIf IPIV(k) > 0, then rows and columns k and IPIV(k) were\ninterchanged and D(k,k) is a 1-by-1 diagonal block.\nIf UPLO = 'U' and IPIV(k) = IPIV(k-1) < 0, then rows and\ncolumns k-1 and -IPIV(k) were interchanged and D(k-1:k,k-1:k)\nis a 2-by-2 diagonal block.  If UPLO = 'L' and IPIV(k) =\nIPIV(k+1) < 0, then rows and columns k+1 and -IPIV(k) were\ninterchanged and D(k:k+1,k:k+1) is a 2-by-2 diagonal block.\n\nIf FACT = 'N', then IPIV is an output argument and on exit\ncontains details of the interchanges and the block structure\nof D, as determined by ZSYTRF."), ('B', 'B is COMPLEX*16 array, dimension (LDB,NRHS)\nThe N-by-NRHS right hand side matrix B.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B.  LDB >= max(1,N).'), ('X', 'X is COMPLEX*16 array, dimension (LDX,NRHS)\nIf INFO = 0 or INFO = N+1, the N-by-NRHS solution matrix X.'), ('LDX', 'LDX is INTEGER\nThe leading dimension of the array X.  LDX >= max(1,N).'), ('RCOND', 'RCOND is DOUBLE PRECISION\nThe estimate of the reciprocal condition number of the matrix\nA.  If RCOND is less than the machine precision (in\nparticular, if RCOND = 0), the matrix is singular to working\nprecision.  This condition is indicated by a return code of\nINFO > 0.'), ('FERR', 'FERR is DOUBLE PRECISION array, dimension (NRHS)\nThe estimated forward error bound for each solution vector\nX(j) (the j-th column of the solution matrix X).\nIf XTRUE is the true solution corresponding to X(j), FERR(j)\nis an estimated upper bound for the magnitude of the largest\nelement in (X(j) - XTRUE) divided by the magnitude of the\nlargest element in X(j).  The estimate is as reliable as\nthe estimate for RCOND, and is almost always a slight\noverestimate of the true error.'), ('BERR', 'BERR is DOUBLE PRECISION array, dimension (NRHS)\nThe componentwise relative backward error of each solution\nvector X(j) (i.e., the smallest relative change in\nany element of A or B that makes X(j) an exact solution).'), ('WORK', 'WORK is COMPLEX*16 array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', "LWORK is INTEGER\nThe length of WORK.  LWORK >= max(1,2*N), and for best\nperformance, when FACT = 'N', LWORK >= max(1,2*N,N*NB), where\nNB is the optimal blocksize for ZSYTRF.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA."), ('RWORK', 'RWORK is DOUBLE PRECISION array, dimension (N)'), ('INFO', 'INFO is INTEGER\n= 0: successful exit\n< 0: if INFO = -i, the i-th argument had an illegal value\n> 0: if INFO = i, and i is\n      <= N:  D(i,i) is exactly zero.  The factorization\n             has been completed but the factor D is exactly\n             singular, so the solution and error bounds could\n             not be computed. RCOND = 0 is returned.\n      = N+1: D is nonsingular, but RCOND is less than machine\n             precision, meaning that the matrix is singular\n             to working precision.  Nevertheless, the\n             solution and error bounds are computed because\n             there are a number of situations where the\n             computed solution can be more accurate than the\n             value of RCOND would suggest.'))
