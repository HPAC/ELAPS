(('dgegs', 'This routine is deprecated and has been replaced by routine DGGES.\n\nDGEGS computes the eigenvalues, real Schur form, and, optionally,\nleft and or/right Schur vectors of a real matrix pair (A,B).\nGiven two square matrices A and B, the generalized real Schur\nfactorization has the form\n\n  A = Q*S*Z**T,  B = Q*T*Z**T\n\nwhere Q and Z are orthogonal matrices, T is upper triangular, and S\nis an upper quasi-triangular matrix with 1-by-1 and 2-by-2 diagonal\nblocks, the 2-by-2 blocks corresponding to complex conjugate pairs\nof eigenvalues of (A,B).  The columns of Q are the left Schur vectors\nand the columns of Z are the right Schur vectors.\n\nIf only the eigenvalues of (A,B) are needed, the driver routine\nDGEGV should be used instead.  See DGEGV for a description of the\neigenvalues of the generalized nonsymmetric eigenvalue problem\n(GNEP).'), ('JOBVSL', "JOBVSL is CHARACTER*1\n= 'N':  do not compute the left Schur vectors;\n= 'V':  compute the left Schur vectors (returned in VSL)."), ('JOBVSR', "JOBVSR is CHARACTER*1\n= 'N':  do not compute the right Schur vectors;\n= 'V':  compute the right Schur vectors (returned in VSR)."), ('N', 'N is INTEGER\nThe order of the matrices A, B, VSL, and VSR.  N >= 0.'), ('A', 'A is DOUBLE PRECISION array, dimension (LDA, N)\nOn entry, the matrix A.\nOn exit, the upper quasi-triangular matrix S from the\ngeneralized real Schur factorization.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of A.  LDA >= max(1,N).'), ('B', 'B is DOUBLE PRECISION array, dimension (LDB, N)\nOn entry, the matrix B.\nOn exit, the upper triangular matrix T from the generalized\nreal Schur factorization.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of B.  LDB >= max(1,N).'), ('ALPHAR', 'ALPHAR is DOUBLE PRECISION array, dimension (N)\nThe real parts of each scalar alpha defining an eigenvalue\nof GNEP.'), ('ALPHAI', 'ALPHAI is DOUBLE PRECISION array, dimension (N)\nThe imaginary parts of each scalar alpha defining an\neigenvalue of GNEP.  If ALPHAI(j) is zero, then the j-th\neigenvalue is real; if positive, then the j-th and (j+1)-st\neigenvalues are a complex conjugate pair, with\nALPHAI(j+1) = -ALPHAI(j).'), ('BETA', 'BETA is DOUBLE PRECISION array, dimension (N)\nThe scalars beta that define the eigenvalues of GNEP.\nTogether, the quantities alpha = (ALPHAR(j),ALPHAI(j)) and\nbeta = BETA(j) represent the j-th eigenvalue of the matrix\npair (A,B), in one of the forms lambda = alpha/beta or\nmu = beta/alpha.  Since either lambda or mu may overflow,\nthey should not, in general, be computed.'), ('VSL', "VSL is DOUBLE PRECISION array, dimension (LDVSL,N)\nIf JOBVSL = 'V', the matrix of left Schur vectors Q.\nNot referenced if JOBVSL = 'N'."), ('LDVSL', "LDVSL is INTEGER\nThe leading dimension of the matrix VSL. LDVSL >=1, and\nif JOBVSL = 'V', LDVSL >= N."), ('VSR', "VSR is DOUBLE PRECISION array, dimension (LDVSR,N)\nIf JOBVSR = 'V', the matrix of right Schur vectors Z.\nNot referenced if JOBVSR = 'N'."), ('LDVSR', "LDVSR is INTEGER\nThe leading dimension of the matrix VSR. LDVSR >= 1, and\nif JOBVSR = 'V', LDVSR >= N."), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK.  LWORK >= max(1,4*N).\nFor good performance, LWORK must generally be larger.\nTo compute the optimal value of LWORK, call ILAENV to get\nblocksizes (for DGEQRF, DORMQR, and DORGQR.)  Then compute:\nNB  -- MAX of the blocksizes for DGEQRF, DORMQR, and DORGQR\nThe optimal LWORK is  2*N + N*(NB+1).\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value.\n= 1,...,N:\n      The QZ iteration failed.  (A,B) are not in Schur\n      form, but ALPHAR(j), ALPHAI(j), and BETA(j) should\n      be correct for j=INFO+1,...,N.\n> N:  errors that usually indicate LAPACK problems:\n      =N+1: error return from DGGBAL\n      =N+2: error return from DGEQRF\n      =N+3: error return from DORMQR\n      =N+4: error return from DORGQR\n      =N+5: error return from DGGHRD\n      =N+6: error return from DHGEQZ (other than failed\n                                      iteration)\n      =N+7: error return from DGGBAK (computing VSL)\n      =N+8: error return from DGGBAK (computing VSR)\n      =N+9: error return from DLASCL (various places)'))
