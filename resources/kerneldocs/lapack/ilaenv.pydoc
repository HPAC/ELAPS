(('ilaenv', 'ILAENV is called from the LAPACK routines to choose problem-dependent\nparameters for the local environment.  See ISPEC for a description of\nthe parameters.\n\nILAENV returns an INTEGER\nif ILAENV >= 0: ILAENV returns the value of the parameter specified by ISPEC\nif ILAENV < 0:  if ILAENV = -k, the k-th argument had an illegal value.\n\nThis version provides a set of parameters which should give good,\nbut not optimal, performance on many of the currently available\ncomputers.  Users are encouraged to modify this subroutine to set\nthe tuning parameters for their particular machine using the option\nand problem size information in the arguments.\n\nThis routine will not function correctly if it is converted to all\nlower case.  Converting it to all upper case is allowed.'), ('ISPEC', 'ISPEC is INTEGER\nSpecifies the parameter to be returned as the value of\nILAENV.\n= 1: the optimal blocksize; if this value is 1, an unblocked\n     algorithm will give the best performance.\n= 2: the minimum block size for which the block routine\n     should be used; if the usable block size is less than\n     this value, an unblocked routine should be used.\n= 3: the crossover point (in a block routine, for N less\n     than this value, an unblocked routine should be used)\n= 4: the number of shifts, used in the nonsymmetric\n     eigenvalue routines (DEPRECATED)\n= 5: the minimum column dimension for blocking to be used;\n     rectangular blocks must have dimension at least k by m,\n     where k is given by ILAENV(2,...) and m by ILAENV(5,...)\n= 6: the crossover point for the SVD (when reducing an m by n\n     matrix to bidiagonal form, if max(m,n)/min(m,n) exceeds\n     this value, a QR factorization is used first to reduce\n     the matrix to a triangular form.)\n= 7: the number of processors\n= 8: the crossover point for the multishift QR method\n     for nonsymmetric eigenvalue problems (DEPRECATED)\n= 9: maximum size of the subproblems at the bottom of the\n     computation tree in the divide-and-conquer algorithm\n     (used by xGELSD and xGESDD)\n=10: ieee NaN arithmetic can be trusted not to trap\n=11: infinity arithmetic can be trusted not to trap\n12 <= ISPEC <= 16:\n     xHSEQR or one of its subroutines,\n     see IPARMQ for detailed explanation'), ('NAME', 'NAME is CHARACTER*(*)\nThe name of the calling subroutine, in either upper case or\nlower case.'), ('OPTS', "OPTS is CHARACTER*(*)\nThe character options to the subroutine NAME, concatenated\ninto a single character string.  For example, UPLO = 'U',\nTRANS = 'T', and DIAG = 'N' for a triangular routine would\nbe specified as OPTS = 'UTN'."), ('N1', 'N1 is INTEGER'), ('N2', 'N2 is INTEGER'), ('N3', 'N3 is INTEGER'), ('N4', 'N4 is INTEGER\nProblem dimensions for the subroutine NAME; these may not all\nbe required.'))
