(('stgex2', 'STGEX2 swaps adjacent diagonal blocks (A11, B11) and (A22, B22)\nof size 1-by-1 or 2-by-2 in an upper (quasi) triangular matrix pair\n(A, B) by an orthogonal equivalence transformation.\n\n(A, B) must be in generalized real Schur canonical form (as returned\nby SGGES), i.e. A is block upper triangular with 1-by-1 and 2-by-2\ndiagonal blocks. B is upper triangular.\n\nOptionally, the matrices Q and Z of generalized Schur vectors are\nupdated.\n\n       Q(in) * A(in) * Z(in)**T = Q(out) * A(out) * Z(out)**T\n       Q(in) * B(in) * Z(in)**T = Q(out) * B(out) * Z(out)**T'), ('WANTQ', 'WANTQ is LOGICAL\n.TRUE. : update the left transformation matrix Q;\n.FALSE.: do not update Q.'), ('WANTZ', 'WANTZ is LOGICAL\n.TRUE. : update the right transformation matrix Z;\n.FALSE.: do not update Z.'), ('N', 'N is INTEGER\nThe order of the matrices A and B. N >= 0.'), ('A', 'A is REAL arrays, dimensions (LDA,N)\nOn entry, the matrix A in the pair (A, B).\nOn exit, the updated matrix A.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1,N).'), ('B', 'B is REAL arrays, dimensions (LDB,N)\nOn entry, the matrix B in the pair (A, B).\nOn exit, the updated matrix B.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B. LDB >= max(1,N).'), ('Q', 'Q is REAL array, dimension (LDZ,N)\nOn entry, if WANTQ = .TRUE., the orthogonal matrix Q.\nOn exit, the updated matrix Q.\nNot referenced if WANTQ = .FALSE..'), ('LDQ', 'LDQ is INTEGER\nThe leading dimension of the array Q. LDQ >= 1.\nIf WANTQ = .TRUE., LDQ >= N.'), ('Z', 'Z is REAL array, dimension (LDZ,N)\nOn entry, if WANTZ =.TRUE., the orthogonal matrix Z.\nOn exit, the updated matrix Z.\nNot referenced if WANTZ = .FALSE..'), ('LDZ', 'LDZ is INTEGER\nThe leading dimension of the array Z. LDZ >= 1.\nIf WANTZ = .TRUE., LDZ >= N.'), ('J1', 'J1 is INTEGER\nThe index to the first block (A11, B11). 1 <= J1 <= N.'), ('N1', 'N1 is INTEGER\nThe order of the first block (A11, B11). N1 = 0, 1 or 2.'), ('N2', 'N2 is INTEGER\nThe order of the second block (A22, B22). N2 = 0, 1 or 2.'), ('WORK', 'WORK is REAL array, dimension (MAX(1,LWORK)).'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK.\nLWORK >=  MAX( N*(N2+N1), (N2+N1)*(N2+N1)*2 )'), ('INFO', 'INFO is INTEGER\n  =0: Successful exit\n  >0: If INFO = 1, the transformed matrix (A, B) would be\n      too far from generalized Schur form; the blocks are\n      not swapped and (A, B) and (Q, Z) are unchanged.\n      The problem of swapping is too ill-conditioned.\n  <0: If INFO = -16: LWORK is too small. Appropriate value\n      for LWORK is returned in WORK(1).'))
