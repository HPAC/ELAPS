(('ztpmqrt', 'ZTPMQRT applies a complex orthogonal matrix Q obtained from a \n"triangular-pentagonal" complex block reflector H to a general\ncomplex matrix C, which consists of two blocks A and B.'), ('SIDE', "SIDE is CHARACTER*1\n= 'L': apply Q or Q**H from the Left;\n= 'R': apply Q or Q**H from the Right."), ('TRANS', "TRANS is CHARACTER*1\n= 'N':  No transpose, apply Q;\n= 'C':  Transpose, apply Q**H."), ('M', 'M is INTEGER\nThe number of rows of the matrix B. M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrix B. N >= 0.'), ('K', 'K is INTEGER\nThe number of elementary reflectors whose product defines\nthe matrix Q.'), ('L', 'L is INTEGER\nThe order of the trapezoidal part of V.  \nK >= L >= 0.  See Further Details.'), ('NB', 'NB is INTEGER\nThe block size used for the storage of T.  K >= NB >= 1.\nThis must be the same value of NB used to generate T\nin CTPQRT.'), ('V', 'V is COMPLEX*16 array, dimension (LDA,K)\nThe i-th column must contain the vector which defines the\nelementary reflector H(i), for i = 1,2,...,k, as returned by\nCTPQRT in B.  See Further Details.'), ('LDV', "LDV is INTEGER\nThe leading dimension of the array V.\nIf SIDE = 'L', LDV >= max(1,M);\nif SIDE = 'R', LDV >= max(1,N)."), ('T', 'T is COMPLEX*16 array, dimension (LDT,K)\nThe upper triangular factors of the block reflectors\nas returned by CTPQRT, stored as a NB-by-K matrix.'), ('LDT', 'LDT is INTEGER\nThe leading dimension of the array T.  LDT >= NB.'), ('A', "A is COMPLEX*16 array, dimension\n(LDA,N) if SIDE = 'L' or \n(LDA,K) if SIDE = 'R'\nOn entry, the K-by-N or M-by-K matrix A.\nOn exit, A is overwritten by the corresponding block of \nQ*C or Q**H*C or C*Q or C*Q**H.  See Further Details."), ('LDA', "LDA is INTEGER\nThe leading dimension of the array A. \nIf SIDE = 'L', LDC >= max(1,K);\nIf SIDE = 'R', LDC >= max(1,M). "), ('B', 'B is COMPLEX*16 array, dimension (LDB,N)\nOn entry, the M-by-N matrix B.\nOn exit, B is overwritten by the corresponding block of\nQ*C or Q**H*C or C*Q or C*Q**H.  See Further Details.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B. \nLDB >= max(1,M).'), ('WORK', "WORK is COMPLEX*16 array. The dimension of WORK is\n N*NB if SIDE = 'L', or  M*NB if SIDE = 'R'."), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value'))
