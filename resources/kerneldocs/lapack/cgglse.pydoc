(('cgglse', 'CGGLSE solves the linear equality-constrained least squares (LSE)\nproblem:\n\n        minimize || c - A*x ||_2   subject to   B*x = d\n\nwhere A is an M-by-N matrix, B is a P-by-N matrix, c is a given\nM-vector, and d is a given P-vector. It is assumed that\nP <= N <= M+P, and\n\n         rank(B) = P and  rank( (A) ) = N.\n                              ( (B) )\n\nThese conditions ensure that the LSE problem has a unique solution,\nwhich is obtained using a generalized RQ factorization of the\nmatrices (B, A) given by\n\n   B = (0 R)*Q,   A = Z*T*Q.'), ('M', 'M is INTEGER\nThe number of rows of the matrix A.  M >= 0.'), ('N', 'N is INTEGER\nThe number of columns of the matrices A and B. N >= 0.'), ('P', 'P is INTEGER\nThe number of rows of the matrix B. 0 <= P <= N <= M+P.'), ('A', 'A is COMPLEX array, dimension (LDA,N)\nOn entry, the M-by-N matrix A.\nOn exit, the elements on and above the diagonal of the array\ncontain the min(M,N)-by-N upper trapezoidal matrix T.'), ('LDA', 'LDA is INTEGER\nThe leading dimension of the array A. LDA >= max(1,M).'), ('B', 'B is COMPLEX array, dimension (LDB,N)\nOn entry, the P-by-N matrix B.\nOn exit, the upper triangle of the subarray B(1:P,N-P+1:N)\ncontains the P-by-P upper triangular matrix R.'), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B. LDB >= max(1,P).'), ('C', 'C is COMPLEX array, dimension (M)\nOn entry, C contains the right hand side vector for the\nleast squares part of the LSE problem.\nOn exit, the residual sum of squares for the solution\nis given by the sum of squares of elements N-P+1 to M of\nvector C.'), ('D', 'D is COMPLEX array, dimension (P)\nOn entry, D contains the right hand side vector for the\nconstrained equation.\nOn exit, D is destroyed.'), ('X', 'X is COMPLEX array, dimension (N)\nOn exit, X is the solution of the LSE problem.'), ('WORK', 'WORK is COMPLEX array, dimension (MAX(1,LWORK))\nOn exit, if INFO = 0, WORK(1) returns the optimal LWORK.'), ('LWORK', 'LWORK is INTEGER\nThe dimension of the array WORK. LWORK >= max(1,M+N+P).\nFor optimum performance LWORK >= P+min(M,N)+max(M,N)*NB,\nwhere NB is an upper bound for the optimal blocksizes for\nCGEQRF, CGERQF, CUNMQR and CUNMRQ.\n\nIf LWORK = -1, then a workspace query is assumed; the routine\nonly calculates the optimal size of the WORK array, returns\nthis value as the first entry of the WORK array, and no error\nmessage related to LWORK is issued by XERBLA.'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit.\n< 0:  if INFO = -i, the i-th argument had an illegal value.\n= 1:  the upper triangular factor R associated with B in the\n      generalized RQ factorization of the pair (B, A) is\n      singular, so that rank(B) < P; the least squares\n      solution could not be computed.\n= 2:  the (N-P) by (N-P) part of the upper trapezoidal factor\n      T associated with A in the generalized RQ factorization\n      of the pair (B, A) is singular, so that\n      rank( (A) ) < N; the least squares solution could not\n          ( (B) )\n      be computed.'))
