(('slasd0', 'Using a divide and conquer approach, SLASD0 computes the singular\nvalue decomposition (SVD) of a real upper bidiagonal N-by-M\nmatrix B with diagonal D and offdiagonal E, where M = N + SQRE.\nThe algorithm computes orthogonal matrices U and VT such that\nB = U * S * VT. The singular values S are overwritten on D.\n\nA related subroutine, SLASDA, computes only the singular values,\nand optionally, the singular vectors in compact form.'), ('N', 'N is INTEGER\nn entry, the row dimension of the upper bidiagonal matrix.\nhis is also the dimension of the main diagonal array D.'), ('SQRE', 'SQRE is INTEGER\npecifies the column dimension of the bidiagonal matrix.\n 0: The bidiagonal matrix has column dimension M = N;\n 1: The bidiagonal matrix has column dimension M = N+1;'), ('D', 'D is REAL array, dimension (N)\nn entry D contains the main diagonal of the bidiagonal\natrix.\nn exit D, if INFO = 0, contains its singular values.'), ('E', 'E is REAL array, dimension (M-1)\nontains the subdiagonal entries of the bidiagonal matrix.\nn exit, E has been destroyed.'), ('U', 'U is REAL array, dimension at least (LDQ, N)\nn exit, U contains the left singular vectors.'), ('LDU', 'LDU is INTEGER\nn entry, leading dimension of U.'), ('VT', 'VT is REAL array, dimension at least (LDVT, M)\nn exit, VT**T contains the right singular vectors.'), ('LDVT', 'LDVT is INTEGER\nn entry, leading dimension of VT.'), ('SMLSIZ', 'SMLSIZ is INTEGER\nn entry, maximum size of the subproblems at the\nottom of the computation tree.'), ('IWORK', 'IWORK is INTEGER array, dimension (8*N)'), ('WORK', 'WORK is REAL array, dimension (3*M**2+2*M)'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit.\n< 0:  if INFO = -i, the i-th argument had an illegal value.\n> 0:  if INFO = 1, a singular value did not converge'))
