(('dpbsvx', 'DPBSVX uses the Cholesky factorization A = U**T*U or A = L*L**T to\ncompute the solution to a real system of linear equations\n   A * X = B,\nwhere A is an N-by-N symmetric positive definite band matrix and X\nand B are N-by-NRHS matrices.\n\nError bounds on the solution and a condition estimate are also\nprovided.'), ('FACT', "FACT is CHARACTER*1\nSpecifies whether or not the factored form of the matrix A is\nsupplied on entry, and if not, whether the matrix A should be\nequilibrated before it is factored.\n= 'F':  On entry, AFB contains the factored form of A.\n        If EQUED = 'Y', the matrix A has been equilibrated\n        with scaling factors given by S.  AB and AFB will not\n        be modified.\n= 'N':  The matrix A will be copied to AFB and factored.\n= 'E':  The matrix A will be equilibrated if necessary, then\n        copied to AFB and factored."), ('UPLO', "UPLO is CHARACTER*1\n= 'U':  Upper triangle of A is stored;\n= 'L':  Lower triangle of A is stored."), ('N', 'N is INTEGER\nThe number of linear equations, i.e., the order of the\nmatrix A.  N >= 0.'), ('KD', "KD is INTEGER\nThe number of superdiagonals of the matrix A if UPLO = 'U',\nor the number of subdiagonals if UPLO = 'L'.  KD >= 0."), ('NRHS', 'NRHS is INTEGER\nThe number of right-hand sides, i.e., the number of columns\nof the matrices B and X.  NRHS >= 0.'), ('AB', "AB is DOUBLE PRECISION array, dimension (LDAB,N)\nOn entry, the upper or lower triangle of the symmetric band\nmatrix A, stored in the first KD+1 rows of the array, except\nif FACT = 'F' and EQUED = 'Y', then A must contain the\nequilibrated matrix diag(S)*A*diag(S).  The j-th column of A\nis stored in the j-th column of the array AB as follows:\nif UPLO = 'U', AB(KD+1+i-j,j) = A(i,j) for max(1,j-KD)<=i<=j;\nif UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(N,j+KD).\nSee below for further details.\n\nOn exit, if FACT = 'E' and EQUED = 'Y', A is overwritten by\ndiag(S)*A*diag(S)."), ('LDAB', 'LDAB is INTEGER\nThe leading dimension of the array A.  LDAB >= KD+1.'), ('AFB', "AFB is DOUBLE PRECISION array, dimension (LDAFB,N)\nIf FACT = 'F', then AFB is an input argument and on entry\ncontains the triangular factor U or L from the Cholesky\nfactorization A = U**T*U or A = L*L**T of the band matrix\nA, in the same storage format as A (see AB).  If EQUED = 'Y',\nthen AFB is the factored form of the equilibrated matrix A.\n\nIf FACT = 'N', then AFB is an output argument and on exit\nreturns the triangular factor U or L from the Cholesky\nfactorization A = U**T*U or A = L*L**T.\n\nIf FACT = 'E', then AFB is an output argument and on exit\nreturns the triangular factor U or L from the Cholesky\nfactorization A = U**T*U or A = L*L**T of the equilibrated\nmatrix A (see the description of A for the form of the\nequilibrated matrix)."), ('LDAFB', 'LDAFB is INTEGER\nThe leading dimension of the array AFB.  LDAFB >= KD+1.'), ('EQUED', "EQUED is CHARACTER*1\nSpecifies the form of equilibration that was done.\n= 'N':  No equilibration (always true if FACT = 'N').\n= 'Y':  Equilibration was done, i.e., A has been replaced by\n        diag(S) * A * diag(S).\nEQUED is an input argument if FACT = 'F'; otherwise, it is an\noutput argument."), ('S', "S is DOUBLE PRECISION array, dimension (N)\nThe scale factors for A; not accessed if EQUED = 'N'.  S is\nan input argument if FACT = 'F'; otherwise, S is an output\nargument.  If FACT = 'F' and EQUED = 'Y', each element of S\nmust be positive."), ('B', "B is DOUBLE PRECISION array, dimension (LDB,NRHS)\nOn entry, the N-by-NRHS right hand side matrix B.\nOn exit, if EQUED = 'N', B is not modified; if EQUED = 'Y',\nB is overwritten by diag(S) * B."), ('LDB', 'LDB is INTEGER\nThe leading dimension of the array B.  LDB >= max(1,N).'), ('X', "X is DOUBLE PRECISION array, dimension (LDX,NRHS)\nIf INFO = 0 or INFO = N+1, the N-by-NRHS solution matrix X to\nthe original system of equations.  Note that if EQUED = 'Y',\nA and B are modified on exit, and the solution to the\nequilibrated system is inv(diag(S))*X."), ('LDX', 'LDX is INTEGER\nThe leading dimension of the array X.  LDX >= max(1,N).'), ('RCOND', 'RCOND is DOUBLE PRECISION\nThe estimate of the reciprocal condition number of the matrix\nA after equilibration (if done).  If RCOND is less than the\nmachine precision (in particular, if RCOND = 0), the matrix\nis singular to working precision.  This condition is\nindicated by a return code of INFO > 0.'), ('FERR', 'FERR is DOUBLE PRECISION array, dimension (NRHS)\nThe estimated forward error bound for each solution vector\nX(j) (the j-th column of the solution matrix X).\nIf XTRUE is the true solution corresponding to X(j), FERR(j)\nis an estimated upper bound for the magnitude of the largest\nelement in (X(j) - XTRUE) divided by the magnitude of the\nlargest element in X(j).  The estimate is as reliable as\nthe estimate for RCOND, and is almost always a slight\noverestimate of the true error.'), ('BERR', 'BERR is DOUBLE PRECISION array, dimension (NRHS)\nThe componentwise relative backward error of each solution\nvector X(j) (i.e., the smallest relative change in\nany element of A or B that makes X(j) an exact solution).'), ('WORK', 'WORK is DOUBLE PRECISION array, dimension (3*N)'), ('IWORK', 'IWORK is INTEGER array, dimension (N)'), ('INFO', 'INFO is INTEGER\n= 0:  successful exit\n< 0:  if INFO = -i, the i-th argument had an illegal value\n> 0:  if INFO = i, and i is\n      <= N:  the leading minor of order i of A is\n             not positive definite, so the factorization\n             could not be completed, and the solution has not\n             been computed. RCOND = 0 is returned.\n      = N+1: U is nonsingular, but RCOND is less than machine\n             precision, meaning that the matrix is singular\n             to working precision.  Nevertheless, the\n             solution and error bounds are computed because\n             there are a number of situations where the\n             computed solution can be more accurate than the\n             value of RCOND would suggest.'))
